<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://doris.apache.org/zh-CN/blog</id>
    <title>Apache Doris Blog</title>
    <updated>2022-07-20T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://doris.apache.org/zh-CN/blog"/>
    <subtitle>Apache Doris Blog</subtitle>
    <icon>https://doris.apache.org/zh-CN/images/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Apache Doris 在京东客服 OLAP 中的应用实践]]></title>
        <id>/jd</id>
        <link href="https://doris.apache.org/zh-CN/blog/jd"/>
        <updated>2022-07-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1><strong>引言</strong></h1><p>Apache Doris 是一款开源的 MPP 分析型数据库产品，不仅能够在亚秒级响应时间即可获得查询结果，有效的支持实时数据分析，而且支持 10PB 以上的超大的数据集。相较于其他业界比较火的 OLAP 数据库系统，Doris 的分布式架构非常简洁，支持弹性伸缩，易于运维，节省大量人力和时间成本。目前国内社区火热，也有美团、小米等大厂在使用。</p><p>本文主要讨论京东客服在人工咨询、客户事件单、售后服务单等专题的实时大屏，在实时和离线数据多维分析方面，如何利用 Doris 进行业务探索与实践。近些年来，随着数据量爆炸式的增长，以及海量数据联机分析需求的出现，MySQL、Oracle 等传统的关系型数据库在大数据量下遇到瓶颈，而 Hive、Kylin 等数据库缺乏时效性。于是 Apache Doris、Apache Druid、ClickHouse 等实时分析型数据库开始出现，不仅可以应对海量数据的秒级查询，更满足实时、准实时的分析需求。离线、实时计算引擎百花齐放。但是针对不同的场景，面临不同的问题，没有哪一种引擎是万能的。我们希望通过本文，对京东客服业务在离线与实时分析的应用与实践，能够给到大家一些启发，也希望大家多多交流，给我们提出宝贵的建议。</p><h1><strong>京东客服业务形态</strong></h1><p>京东客服作为集团服务的入口，为用户和商家提供了高效、可靠的保障。京东客服肩负着及时解决用户问题的重任，给用户提供详细易懂的说明与解释；为更好的了解用户的反馈以及产品的状况，需要实时的监控咨询量、接起率、投诉量等一系列指标，通过环比和同比，及时发现存在的问题，以更好的适应用户的购物方式，提高服务质量与效率，进而提高京东品牌的影响力。</p><h1><strong>Easy OLAP 设计</strong></h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="01-easyolap-doris-数据导入链路"><strong>01 EasyOLAP Doris 数据导入链路</strong><a class="hash-link" href="#01-easyolap-doris-数据导入链路" title="标题的直接链接">​</a></h3><p>EasyOLAP Doris 数据源主要是实时 Kafka 和离线 HDFS 文件。实时数据的导入依赖于 Routine Load 的方式；离线数据主要使用 Broker Load 和 Stream Load 的方式导入。</p><p><img loading="lazy" alt="EasyOLAP Doris 数据导入链路" src="/zh-CN/assets/images/jd03-00bd471f0fab2d98798f5e3148b35fce.png" width="1080" height="604" class="img_ev3q"></p><p>EasyOLAP Doris 数据导入链路</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="02-easyolap-doris-全链路监控"><strong>02 EasyOLAP Doris 全链路监控</strong><a class="hash-link" href="#02-easyolap-doris-全链路监控" title="标题的直接链接">​</a></h3><p>目前 EasyOLAP Doris 项目的监控，使用的是 Prometheus + Grafana 框架。其中 node_exporter 负责采集机器层面的指标，Doris 也会自动以 Prometheus 格式吐出 FE、BE 的服务层面的指标。另外，部署了 OLAP Exporter 服务用于采集 Routine Load 相关的指标，旨在第一时间发现实时数据流导入的情况，确保实时数据的时效性。</p><p><img loading="lazy" alt="EasyOLAP Doris monitoring link" src="/zh-CN/assets/images/jd04-8770adfb04ffe977f931d9eaff4cb534.png" width="1080" height="594" class="img_ev3q"></p><p>EasyOLAP Doris 监控链路</p><p><img loading="lazy" alt="640" src="/zh-CN/assets/images/jd01-47257e8bb0b14785f854db959cdfd931.png" width="871" height="600" class="img_ev3q"></p><p>EasyOLAP Doris 监控面板展示</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="03-easyolap-doris-主备双流设计"><strong>03 EasyOLAP Doris 主备双流设计</strong><a class="hash-link" href="#03-easyolap-doris-主备双流设计" title="标题的直接链接">​</a></h3><p>EasyOLAP Doris 为了保障 0 级业务在大促期间服务的稳定性，采取了主备集群双写的方式。当其中一个集群出现抖动或者数据存在延迟的情况，用户可以自主地快速切换到另一个集群，尽可能的减少集群抖动给业务带来的影响。</p><p><img loading="lazy" alt="03 EasyOLAP Doris Primary-Secondary Dual Stream Design" src="/zh-CN/assets/images/jd02-a6a4279c0c33a25862e89b56e7c986a7.png" width="1080" height="669" class="img_ev3q"></p><p>EasyOLAP Doris 主备双流设计</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="04-easyolap-doris-动态分区管理"><strong>04 EasyOLAP Doris 动态分区管理</strong><a class="hash-link" href="#04-easyolap-doris-动态分区管理" title="标题的直接链接">​</a></h3><p>京东 OLAP 团队分析需求之后，对 Doris 做了一定的定制化开发，其中就涉及到动态分区管理功能。尽管社区版本已经拥有动态分区的功能，但是该功能无法保留指定时间的分区。针对京东集团的特点，我们对指定时间的历史数据进行了留存，比如 618 和 11.11 期间的数据，不会因为动态分区而被删除。</p><p>动态分区管理功能能够控制集群中存储的数据量，而且方便了业务方的使用，无需手动或使用额外代码来管理分区信息。</p><h1><strong>Doris 缓存机制</strong></h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="01-需求场景"><strong>01 需求场景</strong><a class="hash-link" href="#01-需求场景" title="标题的直接链接">​</a></h3><p>致力于不断提升用户体验，京东客服的数据分析追求极致的时效性。离线数据分析场景是写少读多，数据写入一次，多次频繁读取；实时数据分析场景，一部分数据是不更新的历史分区，一部分数据是处于更新的分区。在大部分的分析应用中，存在下述几种场景：</p><ul><li>高并发场景：Doris 较好的支持高并发，但是过高的 QPS 会引起集群抖动，且单个节点无法承载太高的 QPS ；</li><li>复杂查询：京东客服实时运营平台监控根据业务场景需展示多维复杂指标，丰富指标展示对应多种不同的查询，且数据源来自于多张表，虽然单个查询的响应时间在毫秒级别，但是整体的响应时间可能会到秒级别；</li><li>重复查询：如果没有防重刷机制，由于延迟或手误，重复刷新页面会导致提交大量重复的查询；</li></ul><p>针对上述场景，在应用层有解决方案——将查询结果放入到 Redis 中，缓存会周期性的刷新或者由用户手动刷新，但是也会存在一些问题：</p><ul><li>数据不一致：无法立即对数据的更新作出响应，用户接收到的结果可能是旧数据；</li><li>命中率低：如果数据实时性强，缓存频繁失效，则缓存的命中率低且系统的负载无法得缓解；</li><li>额外成本：引入外部组件，增加系统复杂度，增加额外成本。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="02-缓存机制简介"><strong>02 缓存机制简介</strong><a class="hash-link" href="#02-缓存机制简介" title="标题的直接链接">​</a></h3><p>在 EasyOLAP Doris 中，一共有三种不同类型 Cache。根据适用场景的不同，分别为 Result Cache、SQL Cache 和 Partition Cache 。三种缓存都可以通过 MySQL 客户端指令控制开关。</p><p>这三种缓存机制是可以共存的，即可以同时开启。查询时，查询分析器首先会判断是否开启了 Result Cache ，在 Result Cache 开启的情况下先从 Result Cache 中查找该查询是否存在缓存，如果存在缓存，直接取缓存的值返回给客户端；如果缓存失效或者不存在，则直接进行查询并将结果写入到缓存。缓存放在各个 FE 节点的内存中，以便快速读取。</p><p>SQL Cache 按照 SQL 的签名、查询的表的分区的 ID 和分区最新版本号来存储和获取缓存。这三者一起作为缓存的条件，其中一者发生变化，如 SQL 语句变化、数据更新之后分区版本号变化，都会无法命中缓存。在多表 Join 的情况下，其中一张表的分区更新，也会导致无法命中缓存。SQL Cache 更适合 T+1 更新的场景。</p><p>Partition Cache 是更细粒度的缓存机制。Partition Cache 主要是将一个查询根据分区并行拆分，拆分为只读分区和可更新分区，只读分区缓存，更新分区不缓存，相应的结果集也会生成 n 个，然后再将各个拆分后的子查询的结果合并。因此，如果查询 N 天的数据，数据更新最近的 D 天，每天只是日期范围不一样但相似的查询，就可以利用 Partition Cache ，只需要查询 D 个分区即可，其他部分都来自缓存，可以有效降低集群负载，缩短查询响应时间。</p><p>一个查询进入到 Doris，系统先会处理查询语句，并将该查询语句作为 Key，在执行查询语句之前，查询分析器能够自动选择最适合的缓存机制，以确保在最优的情况下，利用缓存机制来缩短查询相应时间。然后检查 Cache 中是否存在该查询结果，如果存在就获取缓存中的数据返回给客户端；如果没有缓存，则正常查询，并将该查询结果以 Value 的形式和该查询语句 Key 存储到缓存中。Result Cache 可以在高并发场景下发挥其作用，也可以保护集群资源不受重复的大查询的侵占。SQL Cache 更加适合 T+1 的场景，在分区更新不频繁以及 SQL 语句重复的情况下，效果很好。Partition Cache 是粒度最小的缓存。在查询语句查询一个时间段的数据时，查询语句会被拆分成多个子查询。在数据只写一个分区或者部分分区的情况下，能够缩短查询时间，节省集群资源。</p><p>为了更好的观察缓存的效果，相关指标已经加入到 Doris 的服务指标中，通过 Prometheus 和 Grafana 监控系统获取直观的监控数据。指标有不同种类的 Cache 的命中数量、不同种类的 Cache 命中率、 Cache 的内存大小等指标。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="03-缓存机制效果"><strong>03 缓存机制效果</strong><a class="hash-link" href="#03-缓存机制效果" title="标题的直接链接">​</a></h3><p>京东客服 Doris 主集群，11.11 期间在没有开启缓存时，部分业务就导致 CPU 的使用率达到 100% ；在开启 Result Cache 的情况下，CPU 使用率在 30%-40% 之间。缓存机制确保业务在高并发场景下，能够快速的得到查询结果，并很好的保护了集群资源。</p><h1><strong>Doris 在 2020 年 11.11 大促期间的优化</strong></h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="01-导入任务优化"><strong>01 导入任务优化</strong><a class="hash-link" href="#01-导入任务优化" title="标题的直接链接">​</a></h3><p>实时数据的导入一直是一个挑战。其中，保证数据实时性和导入稳定性是最重要的。为了能够更加直观的观察实时数据导入的情况，京东 OLAP 团队自主开发了 OLAP Exporter ，用于采集实时数据导入相关的指标，如导入速度、导入积压和暂停的任务等。通过导入速度和导入积压，可以判断一个实时导入任务的状态，如发现任务有积压的趋势，可以使用自主开发的采样工具，对实时任务进行采样分析。实时任务主要有三个阈值来控制任务的提交，分别是每批次最大处理时间间隔、每批次最大处理条数和每批次最大处理数据量，一个任务只要达到其中一个阈值，该任务就会被提交。通过增加日志，发现 FE 中的任务队列比较繁忙，所以，参数的调整主要都是将每批次最大处理条数和每批次最大处理数据量调大，然后根据业务的需求，调整每批次最大处理时间间隔，以保证数据的延迟在每批次最大处理时间间隔的两倍之内。通过采样工具，分析任务，不仅保证了数据的实时性，也保证了导入的稳定性。另外，我们也设置了告警，可以及时发现实时导入任务的积压以及导入任务的暂停等异常情况。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="02-监控指标优化"><strong>02 监控指标优化</strong><a class="hash-link" href="#02-监控指标优化" title="标题的直接链接">​</a></h3><p>监控指标主要分为两个部分，一个是机器层面指标部分，一个是业务层面指标部分。在整个监控面板里，详细的指标带来了全面的数据的同时，也增加了获取重要指标的难度。所以，为了更好的观察所有集群的重要指标，单独设立一个板块—— 11.11 重要指标汇总板块。板块中有 BE CPU 使用率、实时任务消费积压行数、TP99、QPS 等指标。指标数量不多，但是可以观测到所有集群的情况，这样可以免去在监控中频繁切换的麻烦。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="03-周边工具支持"><strong>03 周边工具支持</strong><a class="hash-link" href="#03-周边工具支持" title="标题的直接链接">​</a></h3><p>除了上述说到的采样工具和 OLAP Exporter ，京东 OLAP 团队还开发了一系列的 Doris 维护工具。</p><ol><li><p>导入采样工具：导入采样工具不仅可以采集实时导入的数据，而且还支持调整实时导入任务的参数，或者在实时导入任务暂停状态下，生成创建语句（包括最新的位点等信息）用于任务的迁移等操作。</p></li><li><p>大查询工具：大查询不仅会造成集群 BE CPU 使用率的抖动，还会导致其他查询响应时间变长。在有大查询工具之前，发现集群 CPU 出现抖动，需要去检查所有 FE 上的审计日志，然后再做统计，不仅浪费时间，而且不够直观。大查询工具就是为了解决上述的问题。当监控侧发现集群有抖动，就可以使用大查询工具，输入集群名和时间点，就可以得到该时间点下，不同业务的查询总数，时间超过 5 秒、 10 秒、 20 秒的查询个数，扫描量巨大的查询个数等，方便我们从不同的维度分析大查询。大查询的详细情况也将被保存在中间文件中，可以直接获取不同业务的大查询。整个过程只需要几十秒到一分钟就可以定位到正在发生的大查询并获取相应的查询语句，大大节约了时间和运维成本。</p></li><li><p>降级与恢复工具：为了确保 11.11 大促期间， 0 级业务的稳定性，在集群压力超过安全位的时候，需要对其他非 0 级业务做降级处理，待度过高峰期后，再一键恢复到降级前的设置。降级主要是降低业务的最大连接数、暂停非 0 级的实时导入任务等。这大大增加了操作的便捷性，提高了效率。</p></li><li><p>集群巡检工具：在 11.11 期间，集群的健康巡检是极其重要的。常规巡检包括双流业务的主备集群一致性检查，为了确保业务在一个集群出现问题的时候可以快速切换到另一个集群，就需要保证两个集群上的库表一致、数据量差异不大等；检查库表的副本数是否为 3 且检查集群是否存在不健康的 Tablet ；检查机器磁盘使用率、内存等机器层面的指标等。</p></li></ol><h1><strong>总结与展望</strong></h1><p>京东客服是在 2020 年年初开始引入 Doris 的，目前拥有一个独立集群，一个共享集群，是京东 OLAP 的资深用户。</p><p>在业务使用中也遇到了例如任务调度相关的、导入任务配置相关的和查询相关等问题，这也在推动京东 OLAP 团队更深入的了解 Doris 。我们计划推广使用物化视图来进一步提升查询的效率；使用 Bitmap 来支持 UV 等指标的精确去重操作；使用审计日志，更方便的统计大查询、慢查询；解决实时导入任务的调度问题，使导入任务更加高效稳定。除此之外，我们也计划优化建表、创建优质 Rollup 或物化视图以提升应用的流畅性，加速更多业务向 OLAP 平台靠拢，以提升应用的影响力。</p>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 在美团外卖实时数仓建设中的实践]]></title>
        <id>/meituan</id>
        <link href="https://doris.apache.org/zh-CN/blog/meituan"/>
        <updated>2022-07-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p><strong>导读：</strong>本文主要介绍一种通用的实时数仓构建的方法与实践。实时数仓以端到端低延迟、SQL 标准化、快速响应变化、数据统一为目标。在实践中，我们总结的最佳实践是：一个通用的实时生产平台 + 一个通用交互式实时分析引擎相互配合同时满足实时和准实时业务场景。两者合理分工，互相补充，形成易于开发、易于维护、效率最高的流水线，兼顾开发效率与生产成本，以较好的投入产出比满足业务多样需求。</p><h1><strong>实时场景</strong></h1><p>实时数据在美团外卖的场景是非常多的，主要有以下几点：</p><ul><li><p>运营层面：比如实时业务变化，实时营销效果，当日营业情况以及当日实时业务趋势分析等。</p></li><li><p>生产层面：比如实时系统是否可靠，系统是否稳定，实时监控系统的健康状况等。</p></li><li><p>C 端用户：比如搜索推荐排序，需要实时了解用户的想法，行为、特点，给用户推荐更加关注的内容。</p></li><li><p>风控侧：在外卖以及金融科技用的是非常多的，实时风险识别，反欺诈，异常交易等，都是大量应用实时数据的场景</p></li></ul><h1><strong>实时技术及架构</strong></h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1实时计算技术选型"><strong>1.实时计算技术选型</strong><a class="hash-link" href="#1实时计算技术选型" title="标题的直接链接">​</a></h3><p>目前开源的实时技术比较多，比较通用的是 Storm、Spark Streaming 以及 Flink，具体要根据不同公司的业务情况进行选型。</p><p>美团外卖是依托美团整体的基础数据体系建设，从技术成熟度来讲，前几年用的是 Storm，Storm 当时在性能稳定性、可靠性以及扩展性上是无可替代的，随着 Flink 越来越成熟，从技术性能上以及框架设计优势上已经超越 Storm，从趋势来讲就像 Spark 替代 MR 一样，Storm 也会慢慢被 Flink 替代，当然从 Storm 迁移到 Flink 会有一个过程，我们目前有一些老的任务仍然在 Storm 上，也在不断推进任务迁移。</p><p>具体 Storm 和 Flink 的对比可以参考上图表格。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2实时架构">2.<strong>实时架构</strong><a class="hash-link" href="#2实时架构" title="标题的直接链接">​</a></h3><p><strong>① Lambda 架构</strong></p><p>Lambda 架构是比较经典的架构，以前实时的场景不是很多，以离线为主，当附加了实时场景后，由于离线和实时的时效性不同，导致技术生态是不一样的。Lambda 架构相当于附加了一条实时生产链路，在应用层面进行一个整合，双路生产，各自独立。这在业务应用中也是顺理成章采用的一种方式。</p><p>双路生产会存在一些问题，比如加工逻辑 double，开发运维也会 double，资源同样会变成两个资源链路。因为存在以上问题，所以又演进了一个 Kappa 架构。</p><p><strong>② Kappa 架构</strong></p><p>Kappa 架构从架构设计来讲比较简单，生产统一，一套逻辑同时生产离线和实时。但是在实际应用场景有比较大的局限性，在业内直接用 Kappa 架构生产落地的案例不多见，且场景比较单一。这些问题在我们这边同样会遇到，我们也会有自己的一些思考，在后面会讲到。</p><h1><strong>业务痛点</strong></h1><p>在外卖业务上，我们也遇到了一些问题。</p><p>业务早期，为了满足业务需要，一般是拿到需求后 case by case 的先把需求完成，业务对于实时性要求是很高的，从时效性来说，没有进行中间层沉淀的机会，在这种场景下，一般是拿到业务逻辑直接嵌入，这是能想到的简单有效的方法，在业务发展初期这种开发模式比较常见。</p><p>如上图所示，拿到数据源后，会经过数据清洗，扩维，通过 Storm 或 Flink 进行业务逻辑处理，最后直接进行业务输出。把这个环节拆开来看，数据源端会重复引用相同的数据源，后面进行清洗、过滤、扩维等操作，都要重复做一遍，唯一不同的是业务的代码逻辑是不一样的，如果业务较少，这种模式还可以接受，但当后续业务量上去后，会出现谁开发谁运维的情况，维护工作量会越来越大，作业无法形成统一管理。而且所有人都在申请资源，导致资源成本急速膨胀，资源不能集约有效利用，因此要思考如何从整体来进行实时数据的建设。</p><h1><strong>数据特点与应用场景</strong></h1><p>那么如何来构建实时数仓呢？</p><p>首先要进行拆解，有哪些数据，有哪些场景，这些场景有哪些共同特点，对于外卖场景来说一共有两大类，日志类和业务类。</p><ul><li><p>日志类：数据量特别大，半结构化，嵌套比较深。日志类的数据有个很大的特点，日志流一旦形成是不会变的，通过埋点的方式收集平台所有的日志，统一进行采集分发，就像一颗树，树根非常大，推到前端应用的时候，相当于从树根到树枝分叉的过程（从 1 到 n 的分解过程），如果所有的业务都从根上找数据，看起来路径最短，但包袱太重，数据检索效率低。日志类数据一般用于生产监控和用户行为分析，时效性要求比较高，时间窗口一般是 5min 或 10min 或截止到当前的一个状态，主要的应用是实时大屏和实时特征，例如用户每一次点击行为都能够立刻感知到等需求。</p></li><li><p>业务类：主要是业务交易数据，业务系统一般是自成体系的，以 Binlog 日志的形式往下分发，业务系统都是事务型的，主要采用范式建模方式，特点是结构化的，主体非常清晰，但数据表较多，需要多表关联才能表达完整业务，因此是一个 n 到 1 的集成加工过程。</p></li></ul><p>业务类实时处理面临的几个难点：</p><ul><li><p>业务的多状态性：业务过程从开始到结束是不断变化的，比如从下单-&gt;支付-&gt;配送，业务库是在原始基础上进行变更的，Binlog 会产生很多变化的日志。而业务分析更加关注最终状态，由此产生数据回撤计算的问题，例如 10 点下单，13 点取消，但希望在 10 点减掉取消单。</p></li><li><p>业务集成：业务分析数据一般无法通过单一主体表达，往往是很多表进行关联，才能得到想要的信息，在实时流中进行数据的合流对齐，往往需要较大的缓存处理且复杂。</p></li><li><p>分析是批量的，处理过程是流式的：对单一数据，无法形成分析，因此分析对象一定是批量的，而数据加工是逐条的。</p></li></ul><p>日志类和业务类的场景一般是同时存在的，交织在一起，无论是 Lambda 架构还是 Kappa 架构，单一的应用都会有一些问题。因此针对场景来选择架构与实践才更有意义。</p><h1><strong>实时</strong>数仓架构设计</h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-实时架构流批结合的探索"><strong>1. 实时架构：流批结合的探索</strong><a class="hash-link" href="#1-实时架构流批结合的探索" title="标题的直接链接">​</a></h3><p>基于以上问题，我们有自己的思考。通过流批结合的方式来应对不同的业务场景。</p><p>如上图所示，数据从日志统一采集到消息队列，再到数据流的 ETL 过程，作为基础数据流的建设是统一的。之后对于日志类实时特征，实时大屏类应用走实时流计算。对于 Binlog 类业务分析走实时 OLAP 批处理。</p><p>流式处理分析业务的痛点？对于范式业务，Storm 和 Flink 都需要很大的外存，来实现数据流之间的业务对齐，需要大量的计算资源。且由于外存的限制，必须进行窗口的限定策略，最终可能放弃一些数据。计算之后，一般是存到 Redis 里做查询支撑，且 KV 存储在应对分析类查询场景中也有较多局限。</p><p>实时 OLAP 怎么实现？有没有一种自带存储的实时计算引擎，当实时数据来了之后，可以灵活的在一定范围内自由计算，并且有一定的数据承载能力，同时支持分析查询响应呢？随着技术的发展，目前 MPP 引擎发展非常迅速，性能也在飞快提升，所以在这种场景下就有了一种新的可能。这里我们使用的是 Doris 引擎。</p><p>这种想法在业内也已经有实践，且成为一个重要探索方向。阿里基于 ADB 的实时 OLAP 方案等。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-实时数仓架构设计"><strong>2. 实时数仓架构设计</strong><a class="hash-link" href="#2-实时数仓架构设计" title="标题的直接链接">​</a></h3><p>从整个实时数仓架构来看，首先考虑的是如何管理所有的实时数据，资源如何有效整合，数据如何进行建设。</p><p>从方法论来讲，实时和离线是非常相似的，离线数仓早期的时候也是 case by case，当数据规模涨到一定量的时候才会考虑如何治理。分层是一种非常有效的数据治理方式，所以在实时数仓如何进行管理的问题上，首先考虑的也是分层的处理逻辑，具体如下：</p><ul><li><p>数据源：在数据源的层面，离线和实时在数据源是一致的，主要分为日志类和业务类，日志类又包括用户日志，DB 日志以及服务器日志等。</p></li><li><p>实时明细层：在明细层，为了解决重复建设的问题，要进行统一构建，利用离线数仓的模式，建设统一的基础明细数据层，按照主题进行管理，明细层的目的是给下游提供直接可用的数据，因此要对基础层进行统一的加工，比如清洗、过滤、扩维等。</p></li><li><p>汇总层：汇总层通过 Flink 或 Storm 的简洁算子直接可以算出结果，并且形成汇总指标池，所有的指标都统一在汇总层加工，所有人按照统一的规范管理建设，形成可复用的汇总结果。</p></li></ul><p>总结起来，从整个实时数仓的建设角度来讲，首先数据建设的层次化要先建出来，先搭框架，然后定规范，每一层加工到什么程度，每一层用什么样的方式，当规范定义出来后，便于在生产上进行标准化的加工。由于要保证时效性，设计的时候，层次不能太多，对于实时性要求比较高的场景，基本可以走上图左侧的数据流，对于批量处理的需求，可以从实时明细层导入到实时 OLAP 引擎里，基于 OLAP 引擎自身的计算和查询能力进行快速的回撤计算，如上图右侧的数据流。</p><h1><strong>实时平台化建设</strong></h1><p>架构确定之后，后面考虑的是如何进行平台化的建设，实时平台化建设完全附加于实时数仓管理之上进行的。</p><p>首先进行功能的抽象，把功能抽象成组件，这样就可以达到标准化的生产，系统化的保障就可以更深入的建设，对于基础加工层的清洗、过滤、合流、扩维、转换、加密、筛选等功能都可以抽象出来，基础层通过这种组件化的方式构建直接可用的数据结果流。这其中会有一个问题，用户的需求多样，满足了这个用户，如何兼容其他的用户，因此可能会出现冗余加工的情况，从存储来讲，实时数据不存历史，不会消耗过多的存储，这种冗余是可以接受的，通过冗余的方式可以提高生产效率，是一种空间换时间的思想应用。</p><p>通过基础层的加工，数据全部沉淀到 IDL 层，同时写到 OLAP 引擎的基础层，再往上是实时汇总层计算，基于 Storm、Flink 或 Doris，生产多维度的汇总指标，形成统一的汇总层，进行统一的存储分发。</p><p>当这些功能都有了以后，元数据管理，指标管理，数据安全性、SLA、数据质量等系统能力也会逐渐构建起来。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1实时基础层功能">1.实时基础层功能<a class="hash-link" href="#1实时基础层功能" title="标题的直接链接">​</a></h3><p>实时基础层的建设要解决一些问题。</p><p>首先是一条流重复读的问题，一条 Binlog 打过来，是以 DB 包的形式存在的，用户可能只用其中一张表，如果大家都要用，可能存在所有人都要接这个流的问题。解决方案是可以按照不同的业务解构出来，还原到基础数据流层，根据业务的需要做成范式结构，按照数仓的建模方式进行集成化的主题建设。</p><p>其次要进行组件的封装，比如基础层的清洗、过滤、扩维等功能，通过一个很简单的表达入口，让用户将逻辑写出来。trans 环节是比较灵活的，比如从一个值转换成另外一个值，对于这种自定义逻辑表达，我们也开放了自定义组件，可以通过 Java 或 Python 开发自定义脚本，进行数据加工。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2实时特征生产功能">2.<strong>实时特征生产功能</strong><a class="hash-link" href="#2实时特征生产功能" title="标题的直接链接">​</a></h3><p>特征生产可以通过 SQL 语法进行逻辑表达，底层进行逻辑的适配，透传到计算引擎，屏蔽用户对计算引擎的依赖。就像对于离线场景，目前大公司很少通过代码的方式开发，除非一些特别的 case，所以基本上可以通过 SQL 化的方式表达。</p><p>在功能层面，把指标管理的思想融合进去，原子指标、派生指标，标准计算口径，维度选择，窗口设置等操作都可以通过配置化的方式，这样可以统一解析生产逻辑，进行统一封装。</p><p>还有一个问题，同一个源，写了很多 SQL，每一次提交都会起一个数据流，比较浪费资源，我们的解决方案是，通过同一条流实现动态指标的生产，在不停服务的情况下可以动态添加指标。</p><p>所以在实时平台建设过程中，更多考虑的是如何更有效的利用资源，在哪些环节更能节约化的使用资源，这是在工程方面更多考虑的事情。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3sla-建设">3.SLA 建设<a class="hash-link" href="#3sla-建设" title="标题的直接链接">​</a></h3><p>SLA 主要解决两个问题，一个是端到端的 SLA，一个是作业生产效率的 SLA，我们采用埋点+上报的方式，由于实时流比较大，埋点要尽量简单，不能埋太多的东西，能表达业务即可，每个作业的输出统一上报到 SLA 监控平台，通过统一接口的形式，在每一个作业点上报所需要的信息，最后能够统计到端到端的 SLA。</p><p>在实时生产中，由于链路非常长，无法控制所有链路，但是可以控制自己作业的效率，所以作业 SLA 也是必不可少的。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-实时-olap-方案">4. 实时 OLAP 方案<a class="hash-link" href="#4-实时-olap-方案" title="标题的直接链接">​</a></h3><p>问题：</p><ul><li><p>Binlog 业务还原复杂：业务变化很多，需要某个时间点的变化，因此需要进行排序，并且数据要存起来，这对于内存和 CPU 的资源消耗都是非常大的。</p></li><li><p>Binlog 业务关联复杂：流式计算里，流和流之间的关联，对于业务逻辑的表达是非常困难的。</p></li></ul><p>解决方案：</p><p>通过带计算能力的 OLAP 引擎来解决，不需要把一个流进行逻辑化映射，只需要解决数据实时稳定的入库问题。</p><p>我们这边采用的是 Doris 作为高性能的 OLAP 引擎，由于业务数据产生的结果和结果之间还需要进行衍生计算，Doris 可以利用 unique 模型或聚合模型快速还原业务，还原业务的同时还可以进行汇总层的聚合，也是为了复用而设计。应用层可以是物理的，也可以是逻辑化视图。</p><p>这种模式重在解决业务回撤计算，比如业务状态改变，需要在历史的某个点将值变更，这种场景用流计算的成本非常大，OLAP 模式可以很好的解决这个问题。</p><h1>实时应用案例</h1><p>最后通过一个案例说明，比如商家要根据用户历史下单数给用户优惠，商家需要看到历史下了多少单，历史 T+1 的数据要有，今天实时的数据也要有，这种场景是典型的 Lambda 架构，可以在 Doris 里设计一个分区表，一个是历史分区，一个是今日分区，历史分区可以通过离线的方式生产，今日指标可以通过实时的方式计算，写到今日分区里，查询的时候进行一个简单的汇总。</p><p>这种场景看起来比较简单，难点在于商家的量上来之后，很多简单的问题都会变的复杂，因此后面我们也会通过更多的业务输入，沉淀出更多的业务场景，抽象出来形成统一的生产方案和功能，以最小化的实时计算资源支撑多样化的业务需求，这也是未来需要达到的目的。</p><p>今天的分享就到这里，谢谢大家。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="嘉宾介绍">嘉宾介绍：<a class="hash-link" href="#嘉宾介绍" title="标题的直接链接">​</a></h3><p>朱良，5 年以上传统行业数仓建设经验，6 年互联网数仓经验，技术方向涉及离线，实时数仓治理，系统化能力建设，OLAP 系统及引擎，大数据相关技术，重点跟进 OLAP，实时技术前沿发展趋势。业务方向涉及即席查询，运营分析，策略报告产品，用户画像，人群推荐，实验评估等。</p>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 在小米集团的运维实践]]></title>
        <id>/xiaomi</id>
        <link href="https://doris.apache.org/zh-CN/blog/xiaomi"/>
        <updated>2022-07-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>背景</h1><p>为了提高小米增长分析平台的查询性能以及降低平台的运维成本，2019 年 9 月小米集团引入了 Apache Doris。在过去两年多的时间里，Apache Doris 在小米集团得到了广泛的应用，目前已经服务了增长分析、集团数据看板、天星金融、小米有品、用户画像、广告投放、A/B 实验平台、新零售等数十个业务。在小米集团，质量就是生命线，随着业务持续增长，如何保障线上 Apache Doris 集群的服务质量，对集群的运维人员来说是个不小的挑战。本文将从运维的角度对 Apache Doris 在小米集团的应用实践进行分享。 </p><h1>集群部署和升级</h1><p>基于 Apache Doris 社区发布的稳定版本，小米也维护了内部的 Doris 分支用于内部小版本的迭代。由于和社区编译 Docker 第三方库的硬件环境存在差异，基于社区 Docker 编译出的 Doris 二进制包运行在小米的线上环境会有问题，因此小米内部也维护了自己的 Docker 镜像，用于内部 Doris 分支的编译及发版。内部发版时，在 Docker 容器中会完成源码的编译和打包，并通过 Minos 将二进制包上传到 Tank Server（小米内部的版本仓库）。</p><p>Minos 是小米自研并开源的一款基于命令行的大数据部署和进程管理系统，支持 Doris、HDFS、HBase、Zookeeper 等服务的部署和管理。在小米内部，包上传、集群部署、集群下线、集群升级、进程重启、配置变更等操作都可以通过 Minos 完成， Minos 对于服务的管理依赖于配置文件 deployment-config ，其中配置了服务版本信息、集群的节点信息、集群的配置参数等信息。部署集群时，Minos 会根据 deployment-config 中配置的服务版本信息从 Tank Server 上拉取对应的二进制包，并根据 deployment-config 中配置的节点信息和集群参数部署集群。在集群部署之后，如果进程意外挂掉，Minos 会自动拉起进程，恢复服务。</p><p>轻舟是小米自研的分布式服务生命周期管理平台，贯穿分布式大数据系统从需求评估开始到资源下线结束的生命周期互联互通管理，主要由发布中心、巡检中心、运营数仓、环境管理、故障管理、容量管理等组成，各模块之间逻辑互联、数据互通。轻舟发布中心提供了可编排、低代码、可视化的服务发布和进程管理能力。轻舟发布中心底层依赖 Minos ，因此，可以基于轻舟对 Doris 服务实现平台化管理，包括集群部署、集群下线、集群升级、进程重启、配置变更等操作，如果 Doris 的 FE 或 BE 进程意外挂掉，轻舟会自动拉起进程，恢复服务。</p><h1>业务实践</h1><p>Apache Doris 在小米的典型业务实践如下：</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="01--用户接入">01  用户接入<a class="hash-link" href="#01--用户接入" title="标题的直接链接">​</a></h2><p>数据工场是小米自研的、面向数据开发和数据分析人员的一站式数据开发平台，底层支持 Doris、Hive、Kudu、Iceberg、ES、Talso、TiDB、MySQL 等数据源，同时支持 Flink、Spark、Presto 等计算能力 。</p><p>在小米内部，用户需要通过数据工场接入 Doris 服务，用户需要在数据工场进行注册，并完成建库审批， Doris 运维同学会根据数据工场中用户提交的业务场景、数据使用预期等描述进行接入审批和指导，用户完成接入审批后即可使用 Doris 服务，在数据工场中进行可视化建表和数据导入等操作。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="02--数据导入">02  数据导入<a class="hash-link" href="#02--数据导入" title="标题的直接链接">​</a></h2><p>在小米的业务中，导入数据到 Doris 最常用的两种方式是 Stream Load 和 Broker Load 。用户数据会被划分为实时数据和离线数据，用户的实时和离线数据一般首先会写入到 Talos 中（ Talos 是小米自研的分布式、高吞吐的消息队列）。来自 Talos 的离线数据会被 Sink 到 HDFS ，然后通过数据工场导入到 Doris ，用户可以在数据工场直接提交 Broker Load 任务将 HDFS 上的大批量数据导入到 Doris ，也可以在数据工场执行 SparkSQL 从 Hive 中进行数据查询，并将 SparkSQL 查到的数据通过 Spark-Doris-Connector 导入到 Doris，Spark-Doris-Connector 底层对 Stream Load 进行了封装。来自 Talos 的实时数据一般会通过两种方式导入到 Doris，一种是先经过 Flink 对数据进行 ETL ，然后每隔一定的时间间隔将小批量的数据通过 Flink-Doris-Connector 导入到 Doris，Flink-Doris-Connector 底层对 Stream Load 进行了封装；实时数据的另一种导入方式是，每隔一定的时间间隔通过 Spark Streaming 封装的 Stream Load 将小批量的数据导入到 Doris 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="03--数据查询">03  数据查询<a class="hash-link" href="#03--数据查询" title="标题的直接链接">​</a></h2><p>小米的 Doris 用户一般通过数鲸平台对 Doris 进行分析查询和结果展示。数鲸是小米自研的通用 BI 分析工具，用户可以通过数鲸平台对 Doris 进行查询可视化，并实现用户行为分析（为满足业务的事件分析、留存分析、漏斗分析、路径分析等行为分析需求，我们为 Doris 添加了相应的 UDF 和 UDAF ）和用户画像分析。 </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="04--compaction-调优">04  Compaction 调优<a class="hash-link" href="#04--compaction-调优" title="标题的直接链接">​</a></h2><p>对 Doris 来说，每一次数据导入都会在存储层的相关数据分片（Tablet）下生成一个数据版本，Compaction 机制会异步地对导入生成的较小的数据版本进行合并（Compaction 机制的详细原理可以参考之前的文章《 Doris Compaction 机制解析 》）。小米有较多高频、高并发、近实时导入的业务场景，在较短的时间内就会生成大量的小版本，Compaction 对数据版本合并不及时的话，就会造成版本累积，一方面过多的小版本会增加元数据的压力，另一方面版本数太多会影响查询性能。小米的使用场景中，有较多的表采用了 Unique 和 Aggregate 数据模型，查询性能严重依赖于 Compaction 对数据版本合并是否及时，在我们的业务场景中曾经出现过因为版本合并不及时导致查询性能降低数十倍，进而影响线上服务的情况。但是，Compaction 任务本身又比较耗费机器的 CPU 、内存和磁盘 IO 资源，Compaction 放得太开会占用过多的机器资源，也会影响到查询性能，还可能会造成 OOM。</p><p>针对 Compaction 存在的这一问题，我们一方面从业务侧着手，通过以下方面引导用户：</p><ul><li><p>对表设置合理的分区和分桶，避免生成过多的数据分片。</p></li><li><p>规范用户的数据导入操作，尽量降低数据导入频率，增大单次导入的数据量，降低 Compaction 的压力。</p></li><li><p>避免过多地使用 Delete 操作。Delete 操作会在存储层的相关数据分片下生成一个 Delete 版本，Cumulative Compaction 任务在遇到 Delete 版本时会被截断，该次任务只能合并 Cumulative Point 之后到 Delete 版本之前的数据版本，并将 Cumulative Point 移动到 Delete 版本之后，把 Delete 版本交给后续的 Base Compaction 任务来处理。如果过多地使用 Delete 操作，在 Tablet 下会生成太多的 Delete 版本，进而导致 Cumulative Compaction 任务对版本合并的进度缓慢。使用 Delete 操作并没有真正从磁盘上删除数据，而是在 Delete 版本中记录了删除条件，数据查询时会通过 Merge-On-Read 的方式过滤掉被删除的数据，只有 Delete 版本被 Base Compaction 任务合并之后，Delete 操作要删除的数据才能作为过期数据随着 Stale Rowset 从磁盘上被清除。如果需要删除整个分区的数据，可以使用 Truncate 分区操作，而避免使用 Delete 操作。</p></li></ul><p>另一方面，我们从运维侧对 Compaction 进行了调优：</p><ul><li><p>根据业务场景的不同，针对不同集群配置了不同的 Compaction 参数（ Compaction 策略、线程数等）。</p></li><li><p>适当地降低了 Base Compaction 任务的优先级，增加了Cumulative Compaction 任务的优先级，因为 Base Compaction 任务执行时间长，有严重的写放大问题，而 Cumulative Compaction 任务执行比较快，并且能快速合并大量的小版本。</p></li><li><p>版本积压报警，动态调整 Compaction 参数。Compaction Producer 生产 Compaction 任务时，会更新相应的 Metric ，其中记录了 BE 节点上最大的 Compaction Score 的值，可以通过 Grafana 查看该指标的趋势判断是否出现了版本积压，另外，我们还增加了版本积压的报警。为方便 Compaction 参数调整，我们从代码层面进行了优化，支持运行时动态调整 Compaction 策略和  Compaction  线程数，避免调整 Compaction 参数的时候需要重启进程。</p></li><li><p>支持手动触发指定 Table 、指定 Partition 下数据分片的 Compaction 任务，提高指定 Table、指定 Partition 下数据分片的 Compaction 优先级。</p></li></ul><h1>监控和报警管理</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="01--监控系统">01  监控系统<a class="hash-link" href="#01--监控系统" title="标题的直接链接">​</a></h2><p>Prometheus 会定时从 Doris 的 FE 和 BE 上拉取 Metrics 指标，并展示在 Grafana 监控面板中。基于轻舟数仓的服务元数据（轻舟数仓是轻舟平台基于小米全量大数据服务基础运行数据建设的数据仓库，由 2 张基表和 30+ 张维度表组成，覆盖了大数据组件运行时的资源、服务器 CMDB、成本、进程状态等全流程数据）会自动注册到 Zookeeper 中，Prometheus 会定时从 Zookeeper 中拉取最新的集群元数据信息，并在 Grafana 监控面板中动态展示。另外，我们在 Grafana 中还添加了针对 Doris 大查询列表、实时写入数据量、数据导入事务数等常见排障数据的统计和展示看板，能够联动报警让 Doris 运维同学在集群异常时以最短的时间定位集群的故障原因。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="02--falcon">02  Falcon<a class="hash-link" href="#02--falcon" title="标题的直接链接">​</a></h2><p>Falcon 是小米内部广泛使用的监控和报警系统，因为 Doris 原生地提供了较为完善的 Metrics 接口，可以基于 Prometheus 和 Grafana 方便地提供监控功能，所以我们在 Doris 服务中只使用了 Falcon 的报警功能。 针对 Doris 出现的不同级别故障，我们将报警定义为 P0、P1 和 P2 三个等级：</p><ul><li><p>P2 报警(报警等级为低)：单节点故障报警。单节点指标或进程状态发生异常一般作为 P2 等级发出报警，报警信息以小米办公（小米办公是字节跳动飞书在小米的私有化部署产品，功能和飞书类似）消息的形式发送到告警组成员。</p></li><li><p>P1 报警(报警等级为较高)：集群短时间（3 分钟以内）内查询延迟升高或写入异常等短暂异常状况将作为 P1 等级发出报警，报警信息以小米办公消息的形式发送到告警组成员，P1等级报警要求 Oncall 工程师进行响应和反馈。</p></li><li><p>P0 报警(报警等级为高)：集群长时间（3 分钟以上）查询延迟升高或写入异常等情况将作为 P0 等级发出报警，报警信息以小米办公消息+电话报警的形式发送，P0 级别报警要求 Oncall 工程师 1 分钟内进行响应并协调资源进行故障恢复和复盘准备。</p></li></ul><p>以上对报警类型和案例进行了简单举例，实际上为了维护 Doris 系统稳定，我们还会有形式多样、级别各异的报警和巡检。 </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="03--cloud-doris">03  Cloud-Doris<a class="hash-link" href="#03--cloud-doris" title="标题的直接链接">​</a></h2><p>Cloud-Doris 是小米针对内部 Doris 服务开发的数据收集组件，其最主要的能力在于对 Doris 服务的可用性进行探测以及对内部关注的集群指标数据进行采集。 举例说明：Cloud-Doris 定时会模拟用户对 Doris 系统进行读写来探测服务的可用性，如果集群出现可用性异常，则会通过 Falcon 进行报警；对用户的读写数据进行收集，进而生成用户账单；对表级别数据量、不健康副本、过大 Tablet 等信息进行收集，将异常信息通过 Falcon 进行报警。 </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="04--轻舟巡检">04  轻舟巡检<a class="hash-link" href="#04--轻舟巡检" title="标题的直接链接">​</a></h2><p>对于容量、用户增长、资源配比等慢性隐患，我们使用统一的轻舟大数据服务巡检平台进行巡检和报告。巡检中一般包括两部分：服务特异性巡检和基础指标巡检，其中服务特异性巡检指各个大数据服务特有的不能通用的指标，对 Doris 来说，主要包括：Quota、分片副本数、单表列数、表分区数等；基础指标巡检主要指各服务间可以通用的巡检指标，主要包括：守护进程状态、进程状态、CPU/MEM/DISK、服务器故障及过保提示、资源利用率等。 通过增加巡检的方式，很好地覆盖了难以提前进行报警的慢性隐患，对重大节日无故障提供了支撑。</p><h1>故障恢复</h1><p>当线上集群发生故障时，应当以迅速恢复服务为第一原则。如果清楚故障发生的原因，则根据具体的原因进行处理并恢复服务，如果不清楚故障原因，则保留现场后第一时间应该尝试重启进程，以恢复服务。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="01--接入故障处理">01  接入故障处理<a class="hash-link" href="#01--接入故障处理" title="标题的直接链接">​</a></h2><p>Doris 使用小米 LVS 作为接入层，与开源或公有云的 LB 服务类似，提供 4 层或 7 层的流量负载调度能力。用户通过 VIP (域名)连接 Doris 集群。Doris 绑定合理的探活端口后，一般来说，如果 FE 单节点发生异常会自动被踢除，能够在用户无感知情况下恢复服务，同时会针对异常节点发出报警。当然，对于预估短时间内无法处理完成的 FE 故障，我们会先调整故障节点的权重为 0 或者先从 LVS 删除异常节点，防止进程探活异常引发不可预估的问题。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="02--节点故障处理">02  节点故障处理<a class="hash-link" href="#02--节点故障处理" title="标题的直接链接">​</a></h2><p>对于 FE 节点故障，如果无法快速定位故障原因，一般需要保留线程快照和内存快照后重启进程。可以通过如下命令保存 FE 的线程快照：</p><div class="language-undefined codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-undefined codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jstack 进程ID &gt;&gt; 快照文件名.jstack</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>通过以下命令保存 FE 的内存快照：</p><div class="language-undefined codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-undefined codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jmap -dump:live,format=b,file=快照文件名.heap 进程ID</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在版本升级或一些意外场景下，FE 节点的 image 可能出现元数据异常，并且可能出现异常的元数据被同步到其它 FE 的情况，导致所有 FE 不可工作。一旦发现 image 出现故障，最快的恢复方案是使用 Recovery 模式停止 FE 选举，并使用备份的 image 替换故障的 image。当然，时刻备份 image 并不是容易的事情，鉴于该故障常见于集群升级，我们建议在集群升级的程序中，增加简单的本地 image 备份逻辑，保证每次升级拉起 FE 进程前会保留一份当前最新的 image 数据。 对于 BE 节点故障，如果是进程崩溃，会产生 Core 文件，且 Minos 会自动拉取进程；如果是任务卡住，则需要通过以下命令保留线程快照后重启进程：</p><div class="language-undefined codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-undefined codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pstack 进程ID &gt;&gt; 快照文件名.pstack</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>结束语</h1><p>自从 2019 年 9 月小米集团首次引入 Apache Doris 以来，在两年多的时间里， Apache Doris 已经在小米内部得到了广泛的 使用，目前已经服务了小米数十个业务、集群数量达几十个、节点规模达到数百个，并且已经在小米内部形成了一套以 Apache Doris 为核心的数据生态。 为了提高运维效率，小米内部也围绕 Doris 研发了一整套的自动化管理和运维系统。 随着服务的业务越来越多，当然 Doris 也暴露出了一些问题，比如在过去版本没有比较好的资源隔离机制、业务之间会相互影响，另外系统监控还有待继续完善。 随着社区的快速发展，越来越多的小伙伴参与到了社区建设，向量化引擎已经改造完成，查询优化器的改造工作正在如火如荼地进行，Apache Doris 正在逐渐走向成熟。</p>]]></content>
        <author>
            <name>Apache Doris</name>
        </author>
        <category label="最佳实践" term="最佳实践"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Apache Doris 1.1 Release 版本正式发布]]></title>
        <id>/1.1 Release</id>
        <link href="https://doris.apache.org/zh-CN/blog/1.1 Release"/>
        <updated>2022-07-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p>亲爱的社区小伙伴们，我们很高兴地宣布，Apache Doris 在 2022 年 7 月 14 日迎来 1.1 Release 版本的正式发布！这是 Apache Doris 正式从 Apache 孵化器毕业后并成为 Apache 顶级项目后发布的第一个 Release 版本。在 1.1 版本中，有 90 位 Contributor 为 Apache Doris 提交了超过 450 项优化和修复，感谢每一个让 Apache Doris 变得更好的你！</p><p>在 1.1 版本中，<strong>我们实现了计算层和存储层的全面向量化、正式将向量化执行引擎作为稳定功能进行全面启用</strong>，所有查询默认通过向量化执行引擎来执行，<strong>性能较之前版本有 3-5 倍的巨大提升</strong>；增加了直接访问 Apache Iceberg 外部表的能力，支持对 Doris 和 Iceberg 中的数据进行联邦查询，<strong>扩展了 Apache Doris 在数据湖上的分析能力</strong>；在原有的 LZ4 基础上增加了 ZSTD 压缩算法，进一步提升了数据压缩率；<strong>修复了诸多之前版本存在的性能与稳定性问题</strong>，使系统稳定性得到大幅提升。欢迎大家下载使用。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="升级说明">升级说明<a class="hash-link" href="#升级说明" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="向量化执行引擎默认开启">向量化执行引擎默认开启<a class="hash-link" href="#向量化执行引擎默认开启" title="标题的直接链接">​</a></h3><p>在 Apache Doris 1.0 版本中，我们引入了向量化执行引擎作为实验性功能。用户需要在执行 SQL 查询手工开启，通过 <code>set batch_size = 4096</code> 和 <code>set enable_vectorized_engine = true </code>配置 session 变量来开启向量化执行引擎。</p><p>在 1.1 版本中，我们正式将向量化执行引擎作为稳定功能进行了全面启用，session 变量<code>enable_vectorized_engine</code> 默认设置为 true，无需用户手工开启，所有查询默认通过向量化执行引擎来执行。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="be-二进制文件更名">BE 二进制文件更名<a class="hash-link" href="#be-二进制文件更名" title="标题的直接链接">​</a></h3><p>BE 二进制文件从原有的 palo_be 更名为 doris_be ，如果您以前依赖进程名称进行集群管理和其他操作，请注意修改相关脚本。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="segment-存储格式升级">Segment 存储格式升级<a class="hash-link" href="#segment-存储格式升级" title="标题的直接链接">​</a></h3><p>Apache Doris 早期版本的存储格式为 Segment V1，在 0.12 版本中我们实现了新的存储格式 Segment V2 ，引入了 Bitmap 索引、内存表、Page Cache、字典压缩以及延迟物化等诸多特性。从 0.13 版本开始，新建表的默认存储格式为 Segment V2，与此同时也保留了对 Segment V1 格式的兼容。</p><p>为了保证代码结构的可维护性、降低冗余历史代码带来的额外学习及开发成本，我们决定从下一个版本起不再支持 Segment v1 存储格式，预计在 Apache Doris 1.2 版本中将删除这部分代码，还请所有仍在使用 Segment V1 存储格式的用户务必在 1.1 版本中完成数据格式的转换，操作手册请参考以下链接：</p><p><a href="https://doris.apache.org/zh-CN/docs/1.0/administrator-guide/segment-v2-usage" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/1.0/administrator-guide/segment-v2-usage
</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="正常升级">正常升级<a class="hash-link" href="#正常升级" title="标题的直接链接">​</a></h3><p>正常升级操作请按照官网上的集群升级文档进行滚动升级即可。</p><p><a href="https://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="重要功能">重要功能<a class="hash-link" href="#重要功能" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="支持数据随机分布-实验性功能httpsgithubcomapachedorispull8259-8041">支持数据随机分布 <!-- -->[实验性功能][#8259]<!-- -->(<a href="https://github.com/apache/doris/pull/8259" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris/pull/8259</a>) <a href="https://github.com/apache/doris/pull/8041" target="_blank" rel="noopener noreferrer">#8041</a><a class="hash-link" href="#支持数据随机分布-实验性功能httpsgithubcomapachedorispull8259-8041" title="标题的直接链接">​</a></h3><p>在某些场景中（例如日志分析类场景），用户可能无法找到一个合适的分桶键来避免数据倾斜，因此需要由系统提供额外的分布方式来解决数据倾斜的问题。</p><p>因此通过在建表时可以不指定具体分桶键，选择使用随机分布对数据进行分桶<code>DISTRIBUTED BY random BUCKET number</code>，数据导入时将会随机写入单个 Tablet ，以减少加载过程中的数据扇出，并减少资源开销、提升系统稳定性。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="支持创建-iceberg-外部表-实验性功能httpsgithubcomapachedorispull7391-7981-8179">支持创建 Iceberg 外部表 <!-- -->[实验性功能][#7391]<!-- -->(<a href="https://github.com/apache/doris/pull/7391" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris/pull/7391</a>) <a href="https://github.com/apache/doris/pull/7981" target="_blank" rel="noopener noreferrer">#7981</a> <a href="https://github.com/apache/doris/pull/8179" target="_blank" rel="noopener noreferrer">#8179</a><a class="hash-link" href="#支持创建-iceberg-外部表-实验性功能httpsgithubcomapachedorispull7391-7981-8179" title="标题的直接链接">​</a></h3><p>Iceberg 外部表为 Apache Doris 提供了直接访问存储在 Iceberg 数据的能力。通过 Iceberg 外部表可以实现对本地存储和 Iceberg 存储的数据进行联邦查询，省去繁琐的数据加载工作、简化数据分析的系统架构，并进行更复杂的分析操作。</p><p>在 1.1 版本中，Apache Doris 支持了创建 Iceberg 外部表并查询数据，并支持通过 REFRESH 命令实现 Iceberg 数据库中所有表 Schema 的自动同步。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="增加-zstd-压缩算法-8923-9747">增加 ZSTD 压缩算法 <a href="https://github.com/apache/doris/pull/8923" target="_blank" rel="noopener noreferrer">#8923</a> <a href="https://github.com/apache/doris/pull/9747" target="_blank" rel="noopener noreferrer">#9747</a><a class="hash-link" href="#增加-zstd-压缩算法-8923-9747" title="标题的直接链接">​</a></h3><p>目前 Apache Doris 中数据压缩方法是系统统一指定的，默认为 LZ4。针对部分对数据存储成本敏感的场景，例如日志类场景，原有的数据压缩率需求无法得到满足。</p><p>在 1.1 版本中，用户建表时可以在表属性中设置<code>"compression"="zstd"</code> 将压缩方法指定为 ZSTD。在 25GB 1.1 亿行的文本日志测试数据中，<strong>最高获得了近 10 倍的压缩率、较原有压缩率提升了 53%，从磁盘读取数据并进行解压缩的速度提升了 30%</strong> 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="功能优化">功能优化<a class="hash-link" href="#功能优化" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="更全面的向量化支持"><strong>更全面的向量化支持</strong><a class="hash-link" href="#更全面的向量化支持" title="标题的直接链接">​</a></h3><p>在 1.1 版本中，我们实现了计算层和存储层的全面向量化，包括：</p><ul><li><p>实现了所有内置函数的向量化</p></li><li><p>存储层实现向量化，并支持了低基数字符串列的字典优化</p></li><li><p>优化并解决了向量化引擎的大量性能和稳定性问题。</p></li></ul><p>我们对 Apache Doris 1.1 版本与 0.15 版本分别在 SSB 和 TPC-H 标准测试数据集上进行了性能测试：</p><ul><li><p>在 SSB 测试数据集的全部 13 个 SQL 上，1.1 版本均优于 0.15 版本，整体性能约提升了 3 倍，解决了 1.0 版本中存在的部分场景性能劣化问题；</p></li><li><p>在 TPC-H 测试数据集的全部 22 个 SQL 上，1.1 版本均优于 0.15 版本，整体性能约提升了 4.5 倍，部分场景性能达到了十余倍的提升；</p></li></ul><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/edb59781b0f74ff08821467f23a63bad~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p align="center">SSB 测试数据集</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e34377054f4448b3b367789a391f2122~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p align="center">TPC-H 测试数据集</p><p><strong>性能测试报告：</strong></p><p><a href="https://doris.apache.org/zh-CN/docs/benchmark/ssb" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/benchmark/ssb</a></p><p><a href="https://doris.apache.org/zh-CN/docs/benchmark/tpch" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/benchmark/tpch</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="compaction-逻辑优化与实时性保证-10153">Compaction 逻辑优化与实时性保证 <a href="https://github.com/apache/doris/pull/10153" target="_blank" rel="noopener noreferrer">#10153</a><a class="hash-link" href="#compaction-逻辑优化与实时性保证-10153" title="标题的直接链接">​</a></h3><p>在 Apache Doris 中每次 Commit 都会产生一个数据版本，在高并发写入场景下，容易出现因数据版本过多且 Compaction 不及时而导致的 -235 错误，同时查询性能也会随之下降。</p><p>在 1.1 版本中我们引入了 QuickCompaction，增加了主动触发式的 Compaction 检查，在数据版本增加的时候主动触发 Compaction，同时通过提升分片元信息扫描的能力，快速发现数据版本过多的分片并触发 Compaction。通过主动式触发加被动式扫描的方式，彻底解决数据合并的实时性问题。</p><p>同时，针对高频的小文件 Cumulative Compaction，实现了 Compaction 任务的调度隔离，防止重量级的 Base Compaction 对新增数据的合并造成影响。</p><p>最后，针对小文件合并，优化了小文件合并的策略，采用梯度合并的方式，每次参与合并的文件都属于同一个数据量级，防止大小差别很大的版本进行合并，逐渐有层次的合并，减少单个文件参与合并的次数，能够大幅地节省系统的 CPU 消耗。</p><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a6d5c50f16a048f3ab27357bc97b7461~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><p>在数据上游维持每秒 10w 的写入频率时（20 个并发写入任务、每个作业 5000 行、 Checkpoint 间隔 1s），1.1 版本表现如下：</p><ul><li>数据快速合并：Tablet 数据版本维持在 50 以下，Compaction Score 稳定。相较于之前版本高并发写入时频繁出现的 -235 问题，<strong>Compaction 合并效率有 10 倍以上的提升</strong>。</li></ul><ul><li>CPU 资源消耗显著降低：针对小文件 Compaction 进行了策略优化，在上述高并发写入场景下，<strong>CPU 资源消耗降低 25%</strong> ；</li></ul><ul><li>查询耗时稳定：提升了数据整体有序性，大幅降低查询耗时的波动性，<strong>高并发写入时的查询耗时与仅查询时持平</strong>，查询性能较之前版本<strong>有 3-4 倍提升</strong>。</li></ul><p><img loading="lazy" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c79ee9efba0416d81cc7bed1a349fdf~tplv-k3u1fbpfcp-zoom-1.image" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="parquet-和-orc-文件的读取效率优化-9472">Parquet 和 ORC 文件的读取效率优化 <a href="https://github.com/apache/doris/pull/9472" target="_blank" rel="noopener noreferrer">#9472</a><a class="hash-link" href="#parquet-和-orc-文件的读取效率优化-9472" title="标题的直接链接">​</a></h3><p>通过调整 Arrow 参数，利用 Arrow 的多线程读取能力来加速 Arrow 对每个 row_group 的读取，并修改成 SPSC 模型，通过预取来降低等待网络的代价。优化前后对 Parquet 文件导入的性能有 4 ～ 5 倍的提升。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="更安全的元数据-checkpoint-9180-9192">更安全的元数据 Checkpoint <a href="https://github.com/apache/doris/pull/9180" target="_blank" rel="noopener noreferrer">#9180</a> <a href="https://github.com/apache/doris/pull/9192" target="_blank" rel="noopener noreferrer">#9192</a><a class="hash-link" href="#更安全的元数据-checkpoint-9180-9192" title="标题的直接链接">​</a></h3><p>通过对元数据检查点后生成的 image 文件进行双重检查和保留历史 image 文件的功能，解决了 image 文件错误导致的元数据损坏问题。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bug-修复">Bug 修复<a class="hash-link" href="#bug-修复" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复由于缺少数据版本而无法查询数据的问题严重9267-9266">修复由于缺少数据版本而无法查询数据的问题。（严重）<a href="https://github.com/apache/doris/pull/9267" target="_blank" rel="noopener noreferrer">#9267</a> <a href="https://github.com/apache/doris/pull/9266" target="_blank" rel="noopener noreferrer">#9266</a><a class="hash-link" href="#修复由于缺少数据版本而无法查询数据的问题严重9267-9266" title="标题的直接链接">​</a></h3><p>问题描述：<code>failed to initialize storage reader. tablet=924991.xxxx, res=-214, backend=xxxx</code></p><p>该问题是在版本 1.0 中引入的，可能会导致多个副本的数据版本丢失。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决了资源隔离对加载任务的资源使用限制无效的问题中等9492">解决了资源隔离对加载任务的资源使用限制无效的问题（中等）<a href="https://github.com/apache/doris/pull/9492" target="_blank" rel="noopener noreferrer">#9492</a><a class="hash-link" href="#解决了资源隔离对加载任务的资源使用限制无效的问题中等9492" title="标题的直接链接">​</a></h3><p>在 1.1 版本中， Broker Load 和 Routine Load 将使用具有指定资源标记的 BE 节点进行加载。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复使用-http-brpc-超过-2gb-传输网络数据包导致数据传输错误的问题中等9770">修复使用 HTTP BRPC 超过 2GB 传输网络数据包导致数据传输错误的问题（中等）<a href="https://github.com/apache/doris/pull/9770" target="_blank" rel="noopener noreferrer">#9770</a><a class="hash-link" href="#修复使用-http-brpc-超过-2gb-传输网络数据包导致数据传输错误的问题中等9770" title="标题的直接链接">​</a></h3><p>在以前的版本中，当通过 BRPC 在后端之间传输的数据超过 2GB 时，可能会导致数据传输错误。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他">其他<a class="hash-link" href="#其他" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="禁用-mini-load">禁用 Mini Load<a class="hash-link" href="#禁用-mini-load" title="标题的直接链接">​</a></h3><p>Mini Load 与 Stream Load 的导入实现方式完全一致，都是通过 HTTP 协议提交和传输数据，在导入功能支持上 Stream Load 更加完备。</p><p>在 1.1 版本中，默认情况下 Mini Load 接口 <code>/_load</code> 将处于禁用状态，请统一使用 Stream Load 来替换 Mini Load。您也可以通过关闭 FE 配置项 <code>disable_mini_load</code> 来重新启用 Mini Load 接口。在版本 1.2 中，将彻底删除 Mini Load 。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="完全禁用-segmentv1-存储格式">完全禁用 SegmentV1 存储格式<a class="hash-link" href="#完全禁用-segmentv1-存储格式" title="标题的直接链接">​</a></h3><p>在 1.1 版本中将不再允许新创建 SegmentV1 存储格式的数据，现有数据仍可以继续正常访问。</p><p>您可以使用 ADMIN SHOW TABLET STORAGE FORMAT 语句检查集群中是否仍然存在 SegmentV1 格式的数据，如果存在请务必通过数据转换命令转换为 SegmentV2。</p><p>在 Apache Doris 1.2 版本中不再支持对 Segment V1 数据的访问，同时 Segment V1 代码将被彻底删除。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="限制-string-类型的最大长度-8567">限制 String 类型的最大长度 <a href="https://github.com/apache/doris/pull/8567" target="_blank" rel="noopener noreferrer">#8567</a><a class="hash-link" href="#限制-string-类型的最大长度-8567" title="标题的直接链接">​</a></h3><p>String 类型是 Apache Doris 在 0.15 版本中引入的新数据类型，在过去 String 类型的最大长度允许为 2GB。</p><p>在 1.1 版本中，我们将 String 类型的最大长度限制为 1 MB，超过此长度的字符串无法再写入，同时不再支持将 String 类型用作表的 Key 列、分区列以及分桶列。</p><p>已写入的字符串类型可以正常访问。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="修复-fastjson-相关漏洞-9763">修复 fastjson 相关漏洞 <a href="https://github.com/apache/doris/pull/9763" target="_blank" rel="noopener noreferrer">#9763</a><a class="hash-link" href="#修复-fastjson-相关漏洞-9763" title="标题的直接链接">​</a></h3><p>对 Canal 版本进行更新以修复 fastjson 安全漏洞</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="添加了-admin-diagnose-tablet-命令-8839">添加了 ADMIN DIAGNOSE TABLET 命令 <a href="https://github.com/apache/doris/pull/8839" target="_blank" rel="noopener noreferrer">#8839</a><a class="hash-link" href="#添加了-admin-diagnose-tablet-命令-8839" title="标题的直接链接">​</a></h3><p>通过 ADMIN DIAGNOSE TABLET tablet_id 命令可以快速诊断指定 Tablet 的问题。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="下载使用">下载使用<a class="hash-link" href="#下载使用" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="下载链接">下载链接<a class="hash-link" href="#下载链接" title="标题的直接链接">​</a></h3><p><a href="https://doris.apache.org/zh-CN/download" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/download</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="升级说明-1">升级说明<a class="hash-link" href="#升级说明-1" title="标题的直接链接">​</a></h3><p>您可以从 Apache Doris 1.0 Release 版本和 1.0.x 发行版本升级到 1.1 Release 版本，升级过程请官网参考文档。如果您当前是 0.15 Release 版本或 0.15.x 发行版本，可跳过 1.0 版本直接升级至 1.1。</p><p>[https://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade]<!-- -->(<a href="https://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade" target="_blank" rel="noopener noreferrer">https://doris.apache.org/zh-CN/docs/admin-manual/cluster-management/upgrade</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="意见反馈">意见反馈<a class="hash-link" href="#意见反馈" title="标题的直接链接">​</a></h3><p>如果您遇到任何使用上的问题，欢迎随时通过 GitHub Discussion 论坛或者 Dev 邮件组与我们取得联系。</p><p>GitHub 论坛：<a href="https://github.com/apache/incubator-doris/discussions" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-doris/discussions</a></p><p>Dev 邮件组：<a href="/zh-CN/blog/dev@doris.apache.org">dev@doris.apache.org</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="致谢">致谢<a class="hash-link" href="#致谢" title="标题的直接链接">​</a></h2><p>Apache Doris 1.1 Release 版本的发布离不开所有社区用户的支持，在此向所有参与版本设计、开发、测试、讨论的社区贡献者们表示感谢，他们分别是：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@adonis0147</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@airborne12</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@amosbird</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@aopangzi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@arthuryangcs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@awakeljw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@BePPPower</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@BiteTheDDDDt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@bridgeDream</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@caiconghui</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@cambyzju</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ccoffline</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@chenlinzhong</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@daikon12</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@DarvenDuan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dataalive</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dataroaring</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@deardeng</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Doris-Extras</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@emerkfu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@EmmyMiao87</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@englefly</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Gabriel39</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@GoGoWen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@gtchaos</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@HappenLee</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@hello-stephen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Henry2SS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@hewei-nju</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@hf200012</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@jacktengg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@jackwener</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Jibing-Li</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@JNSimba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@kangshisen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Kikyou1997</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@kylinmac</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Lchangliang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@leo65535</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@liaoxin01</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@liutang123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@lovingfeel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luozenglin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luwei16</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luzhijing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@mklzl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@morningman</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@morrySnow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@nextdreamblue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Nivane</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@pengxiangyu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@qidaye</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@qzsee</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SaintBacchus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SleepyBear96</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@smallhibiscus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@spaces-X</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@stalary</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@starocean999</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@steadyBoy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SWJTU-ZhangLei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Tanya-W</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tarepanda1024</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tianhui5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Userwhite</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangbo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangyf0555</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@weizuo93</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@whutpencil</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wsjz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wunan1210</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xiaokang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xinyiZzz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xlwh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xy720</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yangzhg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Yankee24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yiguolei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yinzhijian</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yixiutt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zbtzbtzbt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zenoyang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhangstar333</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhangyifan27</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhannngchen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhengshengjun</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhengshiJ</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zingdle</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zuochunwei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zy-kkk</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>鲁志敬</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[开源实时分析型数据库 Apache Doris 正式成为顶级项目]]></title>
        <id>/Annoucing</id>
        <link href="https://doris.apache.org/zh-CN/blog/Annoucing"/>
        <updated>2022-06-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<p>Apache Doris 是一个基于 MPP 的现代化、高性能、实时的分析型数据库，以极速易用的特点被人们所熟知，仅需亚秒级响应时间即可返回海量数据下的查询结果，不仅可以支持高并发的点查询场景，也能支持高吞吐的复杂分析场景。基于此，Apache Doris 在多维报表、用户画像、即席查询、实时大屏等诸多业务领域都能得到很好应用。</p><p>Apache Doris 最早是诞生于百度内部广告报表业务的 Palo 项目，2017 年正式对外开源，2018 年 7 月由百度捐赠给 Apache 基金会进行孵化，之后在 Apache 导师的指导下由孵化器项目管理委员会成员进行孵化和运营。</p><p>我们很自豪 Doris 能够顺利从 Apache 孵化器毕业，这是一个重要的里程碑。在整个孵化阶段，依靠 Apache 理念的指导和孵化器导师的帮助，我们学会了如何以 Apache 的方式去发展我们的项目与社区，也在这一进程中获得了巨大的成长。</p><p>目前 Apache Doris 社区已经聚集了来自不同行业近百家企业的 300 余位贡献者，并且每月活跃贡献者人数也接近 100 位。在孵化期间，Apache Doris 一共发布了 8 个重要版本，完成了包括存储引擎升级、向量化执行引擎等诸多重大功能，并正式发布了 1.0 版本。正是依靠这些来自开源贡献者的力量，才使得 Apache Doris 取得了今天的成绩。</p><p>与此同时，Apache Doris 如今在中国乃至全球范围内都拥有着极为广泛的用户群体，截止目前， Apache Doris 已经在全球超过 500 家企业的生产环境中得到应用，在中国市值或估值排行前 50 的互联网公司中，有超过 80% 长期使用 Apache Doris，包括百度、美团、小米、京东、字节跳动、腾讯、快手、网易、微博、新浪、360 等知名公司。同时在一些传统行业如金融、能源、制造、电信等领域也有着丰富的应用。</p><p>你可以基于 Apache Doris 快速构建一个简单易用并且性能强大的数据分析平台，非常易于上手，所需要付出的学习成本非常低。并且 Apache Doris 的分布式架构非常简洁，可以极大降低系统运维的工作量，这也是越来越多用户选择 Apache Doris 的关键因素。</p><p>作为一款成熟的分析型数据库项目，Apache Doris 有以下优势：</p><ul><li><p>性能优异：自带高效的列式存储引擎，减少数据扫描量的同时还实现了超高的数据压缩比。同时 Doris 还提供了丰富的索引结构来加速数据读取与过滤，利用分区分桶裁剪功能，Doris 可以支持在线服务业务的超高并发，单节点最高可支持上千 QPS。更进一步，Apache Doris 结合了向量化执行引擎来充分发挥现代化 CPU 并行计算能力，辅以智能物化视图技术实现预聚合加速，并可以通过查询优化器同时进行基于规划和基于代价的查询优化。通过上述多种方式，实现了极致的查询性能。</p></li><li><p>简单易用：支持标准 ANSI SQL 语法，包括单表聚合、排序、过滤和多表 Join、子查询等，还支持窗口函数、Grouping Set 等复杂 SQL 语法，同时用户可以通过 UDF 和 UDAF 等自定义函数来拓展系统功能。除此以外，Apache Doris 还实现了 MySQL 协议兼容，用户可以通过各类客户端工具来访问 Doris，并支持与 BI 工具的无缝对接。</p></li><li><p>架构精简：系统只有两个 Frontend（FE）和 Backend（BE）两个模块，其中 FE 节点负责用户请求的接入、查询计划的解析、元数据存储及集群管理等工作，BE 节点负责数据存储和查询计划的执行，自身就是一个完备的分布式数据库管理系统，用户无需安装任何第三方管控组件即可运行起 Apache Doris 集群，并且部署和升级过程都非常简易。同时，任一模块都可以支持横向拓展，集群最高可以拓展到数百个节点，支持存储超过 10PB 的超大规模数据。</p></li><li><p>稳定可靠：支持数据多副本存储，集群具备自愈功能，自身的分布式管理框架可以自动管理数据副本的分布、修复和均衡，副本损坏时系统可以自动感知并进行修复。节点扩容时，仅需一条 SQL 命令即可完成，数据分片会自动在节点间均衡，无需人工干预或操作。无论是扩容、缩容、单节点故障还是在升级过程中，系统都无需停止运行，可正常提供稳定可靠的在线服务。</p></li><li><p>生态丰富：提供丰富的数据同步方式，支持快速加载来自本地、Hadoop、Flink、Spark、Kafka、SeaTunnel 等系统中的数据，也可以直接访问 MySQL、PostgreSQL、Oracle、S3、Hive、Iceberg、Elasticsearch 等系统中的数据而无需数据复制。同时存储在 Doris 中的数据也可以被 Spark、Flink 读取，并且可以输出给上游数据应用进行展示分析。</p></li></ul><p>毕业不是最终目标，它是新征程的起点。在过去，我们发起 Doris 的目标是为更多人提供体验更佳的数据分析工具、解决他们数据分析的难题。成为 Apache 顶级项目一方面是对 Apache Doris 社区过去所有贡献者一直以来辛勤工作的肯定，另一方面也意味着我们在 Apache Way 的指引下建立了一个强大的、繁荣的、可持续发展的开源社区。未来我们将会继续以 Apache 方式运作社区，相信会吸引到更多优秀的开源贡献者参与社区中来，社区也会在所有贡献者的帮助下得到进一步成长。</p><p>Apache Doris 后续将开展更多富有挑战且有意义的工作，包括新的查询优化器、对湖仓一体化的支持，以及面向云上基础设施的架构演进等等。欢迎更多的开源技术爱好者加入 Apache Doris 的社区，携手共成长。</p><p>我们再次由衷地感谢所有参与建设 Apache Doris 社区的贡献者们，以及所有使用 Apache Doris 并不断提出改进建议的用户们。同时也感谢一路走来，不断鼓励、支持和帮助过我们的孵化器导师、IPMC 成员以及各个开源项目社区的朋友们。</p><p><strong>Apache Doris GitHub：</strong></p><p><a href="https://github.com/apache/doris" target="_blank" rel="noopener noreferrer">https://github.com/apache/doris</a></p><p><strong>Apache Doris website:</strong></p><p><a href="http://doris.apache.org" target="_blank" rel="noopener noreferrer">http://doris.apache.org</a></p><p><strong>Please contact us via:</strong></p><p><a href="/zh-CN/blog/dev@doris.apache.org.">dev@doris.apache.org.</a></p><p><strong>See How to subscribe:</strong></p><p><a href="http://doris.apache.org/community/subscribe-mail-list.html" target="_blank" rel="noopener noreferrer">http://doris.apache.org/community/subscribe-mail-list.html</a></p>]]></content>
        <author>
            <name>陈明雨</name>
        </author>
        <category label="重大新闻" term="重大新闻"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Doris 发版通告] Apache Doris(Incubating) 1.0.0 Release]]></title>
        <id>/release-note-1.0.0</id>
        <link href="https://doris.apache.org/zh-CN/blog/release-note-1.0.0"/>
        <updated>2022-04-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>Apache Doris(Incubating) 1.0.0 Release</h1><p>亲爱的社区小伙伴们，历时数月，我们很高兴地宣布，Apache Doris (incubating) 于 2022 年 4 月 18 日迎来了 1.0 Release 版本的正式发布！<strong>这是 Apache Doris 在进入 Apache 基金会孵化以来的第一个 1 位版本，也是迄今为止对 Apache Doris 核心代码重构幅度最大的一个版本<!-- -->*<!-- -->*</strong>！<strong>有 </strong>114 位 Contributor<strong> 为 Apache Doris 提交了</strong>超过 660 项优化和修复<!-- -->*<!-- -->*<!-- -->，感谢每一个让 Apache Doris 变得更好的你！</p><p>在 1.0 版本中，我们引入了向量化执行引擎、Hive 外部表、Lateral View 语法及 Table Function 表函数、Z-Order 数据索引、Apache SeaTunnel 插件等重要功能，增加了对 Flink CDC 同步更新和删除数据的支持，优化了诸多数据导入和查询过程中的问题，对 Apache Doris 的查询性能、易用性、稳定性等多方特效进行了全面加强，欢迎大家下载使用！点击文末“<strong>阅读原文</strong>”即可直接前往下载地址。</p><p>每一个不曾发版的日子，背后都有无数贡献者枕戈待旦，不敢停歇半分。在此我们尤其要感谢来自<strong>向量化执行引擎、查询优化器、可视化运维平台 等 SIG （专项兴趣小组）的小伙伴</strong>。自 2021 年 8 月 Apache Doris 社区 SIG 小组成立以来，<strong>来自百度、美团、小米、京东、蜀海、字节跳动、腾讯、网易、阿里巴巴、PingCAP、Nebula Graph 等十余家公司的数十名贡献者</strong>作为首批成员加入到 SIG 中，第一次以专项小组的开源协作形式完成了向量化执行引擎、查询优化器、 Doris Manager 可视化监控运维平台等如此重大功能的开发，<strong>历时半年以上、开展技术调研和分享数十次、召开远程会议近百次、累计提交 Commits 多达数百个、涉及代码行数高达十余万行</strong>，正是因为有他们的贡献，才有 1.0 版本的问世，让我们再次对他们的辛勤付出表示最真诚的感谢！</p><p>与此同时，Apache Doris 的贡献者数量已超过 300 人，每月活跃的贡献者数量超过了 60 人，近几周平均每周提交的 Commits 数量也超过 80，社区聚集的开发者规模及活跃度已经有了极大的提升。我们十分期待有更多的小伙伴参与社区贡献中来，与我们一道把 Apache Doris 打造成全球顶级的分析型数据库，也期待所有小伙伴可以与我们一起收获宝贵的成长。如果你想参与社区，欢迎通过开发者邮箱 <a href="mailto:dev@doris.apache.org" target="_blank" rel="noopener noreferrer">dev@doris.apache.org</a> 与我们取得联系。</p><p>我们欢迎大家在使用过程中，有任何问题通过 GitHub Discussion 或者 Dev 邮件组与我们取得联系，也期待大家参与社区讨论和建设中 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="重要更新">重要更新<a class="hash-link" href="#重要更新" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="向量化执行引擎-experimental">向量化执行引擎 <!-- -->[Experimental]<a class="hash-link" href="#向量化执行引擎-experimental" title="标题的直接链接">​</a></h3><p>过去 Apache Doris 的 SQL 执行引擎是基于行式内存格式以及基于传统的火山模型进行设计的，在进行 SQL 算子与函数运算时存在非必要的开销，导致 Apache Doris 执行引擎的效率受限，并不适应现代 CPU 的体系结构。向量化执行引擎的目标是替换 Apache Doris 当前的行式 SQL 执行引擎，充分释放现代 CPU 的计算能力，突破在 SQL 执行引擎上的性能限制，发挥出极致的性能表现。</p><p>基于现代 CPU 的特点与火山模型的执行特点，向量化执行引擎重新设计了在列式存储系统的 SQL 执行引擎：</p><ul><li>重新组织内存的数据结构，用 Column 替换 Tuple，提高了计算时 Cache 亲和度，分支预测与预取内存的友好度</li><li>分批进行类型判断，在本次批次中都使用类型判断时确定的类型，将每一行类型判断的虚函数开销分摊到批量级别。</li><li>通过批级别的类型判断，消除了虚函数的调用，让编译器有函数内联以及 SIMD 优化的机会</li></ul><p>从而大大提高了 CPU 在 SQL 执行时的效率，提升了 SQL 查询的性能。</p><p>在 Apache Doris 1.0 版本中，通过 set batch_size = 4096 和 set enable_vectorized_engine = true 开启向量化执行引擎，多数情况下可显著提升查询性能。在 SSB 和 OnTime 标准测试数据集下，多表关联和宽列查询两大场景的整体性能分别有 3 倍和 2.6 倍的提升。</p><p><img loading="lazy" src="/zh-CN/assets/images/1.0.0-1-e7888e124fefa8bd38215dd9d4be4794.png" width="1080" height="697" class="img_ev3q"></p><p><img loading="lazy" src="/zh-CN/assets/images/1.0.0-2-d9e8be01f5ff99dd6e15fc33af4518fc.png" width="1080" height="819" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lateral-view-语法-experimental">Lateral View 语法 <!-- -->[Experimental]<a class="hash-link" href="#lateral-view-语法-experimental" title="标题的直接链接">​</a></h3><p>通过 Lateral View 语法，我们可以使用 explod_bitmap 、explode_split、explode_jaon_array 等 Table Function 表函数，将 bitmap、String 或 Json Array 由一列展开成多行，以便后续可以对展开的数据进行进一步处理（如 Filter、Join 等）。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="hive-外表-experimental">Hive 外表 <!-- -->[Experimental]<a class="hash-link" href="#hive-外表-experimental" title="标题的直接链接">​</a></h3><p>Hive External Table 为用户提供了通过 Doris 直接访问 Hive 表的能力，外部表省去了 繁琐的数据导入工作，可以借助 Doris 本身 OLAP 的能力来解决 Hive 表的数据分析问题。当前版本支持将 Hive 数据源接入 Doris，并支持通过 Doris 与 Hive 数据源中的数据进行联邦查询，进行更加复杂的分析操作。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="支持-z-order-数据排序格式">支持 Z-Order 数据排序格式<a class="hash-link" href="#支持-z-order-数据排序格式" title="标题的直接链接">​</a></h3><p>Apache Doris 数据是按照前缀列排序存储的，因此在包含前缀查询条件时，可以在排序数据上进行快速的数据查找，但如果查询条件不是前缀列，则无法利用数据排序的特征进行快速数据查找。通过 Z-Order Indexing 可以解决上述问题，在 1.0 版本中我们增加了 Z-Order 数据排序格式，在看板类多列查询的场景中可以起到很好过滤效果，加速对非前缀列条件的过滤性能。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="支持-apache-seatunnelincubating插件">支持 Apache SeaTunnel（Incubating）插件<a class="hash-link" href="#支持-apache-seatunnelincubating插件" title="标题的直接链接">​</a></h3><p>Apache SeaTunnel 是一个高性能的分布式数据集成框架，架构于 Apache Spark 和 Apache Flink 之上。在 Apache Doris 1.0 版本中，我们增加了 SaeTunnel 插件，用户可以借助 Apache SeaTunnel 进行多数据源之间的同步和 ETL。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="新增函数">新增函数<a class="hash-link" href="#新增函数" title="标题的直接链接">​</a></h3><p>支持更多 bitmap 函数，具体可查看函数手册：</p><ul><li>bitmap_max</li><li>bitmap_and_not</li><li>bitmap_and_not_count</li><li>bitmap_has_all</li><li>bitmap_and_count</li><li>bitmap_or_count</li><li>bitmap_xor_count</li><li>bitmap_subset_limit</li><li>sub_bitmap</li></ul><p>支持国密算法 SM3/SM4；</p><blockquote><p><strong>注意</strong>：以上标记 <!-- -->[Experimental]<!-- --> 的功能为实验性功能，我们将会在后续版本中对以上功能进行持续优化和迭代，并后续版本中进一步完善。在使用过程中有任何问题或意见，欢迎随时与我们联系</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="重要优化">重要优化<a class="hash-link" href="#重要优化" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="功能优化">功能优化<a class="hash-link" href="#功能优化" title="标题的直接链接">​</a></h3><ul><li>降低大批量导入时，生成的 Segment 文件数量，以降低 Compaction 压力。</li><li>通过 BRPC 的 attachment 功能传输数据，以查询过程中的降低序列化和反序列化开销。</li><li>支持直接返回 HLL/BITMAP 类型的二进制数据，用于业务在外侧解析。</li><li>优化并降低 BRPC 出现 OVERCROWDED 和 NOT_CONNECTED 错误的概率，增强系统稳定性。</li><li>增强导入的容错性。</li><li>支持通过 Flink CDC 同步更新和删除数据。</li><li>支持自适应的 Runtime Filter。</li><li>显著降低 insert into 操作的内存占用</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="易用性改进">易用性改进<a class="hash-link" href="#易用性改进" title="标题的直接链接">​</a></h3><ul><li>Routine Load 支持显示当前 offset 延迟数量等状态。</li><li>FE audit log 中增加查询峰值内存使用量的统计。</li><li>Compaction URL 结果中增加缺失版本的信息，方便排查问题。</li><li>支持将 BE 标记为不可查询或不可导入，以快速屏蔽问题节点。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="重要-bug-修复">重要 Bug 修复<a class="hash-link" href="#重要-bug-修复" title="标题的直接链接">​</a></h3><ul><li>修复若干查询错误问题。</li><li>修复 Broker Load 若干调度逻辑问题。</li><li>修复 STREAM 关键词导致元数据无法加载的问题。</li><li>修复 Decommission 无法正确执行的问题。</li><li>修复部分情况下操作 Schema Change 操作可能出现 -102 错误的问题。</li><li>修复部分情况下使用 String 类型可能导致 BE 宕机的问题。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他">其他<a class="hash-link" href="#其他" title="标题的直接链接">​</a></h3><ul><li>增加 Minidump 功能；</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="更新日志">更新日志<a class="hash-link" href="#更新日志" title="标题的直接链接">​</a></h2><p>详细 Release Note 请查看链接：</p><p><a href="https://github.com/apache/incubator-doris/issues/8549" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-doris/issues/8549</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="致谢">致谢<a class="hash-link" href="#致谢" title="标题的直接链接">​</a></h2><p>Apache Doris(incubating) 1.0 Release 版本的发布离不开所有社区用户的支持，在此向所有参与版本设计、开发、测试、讨论的社区贡献者们表示感谢，他们分别是：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@924060929</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@adonis0147</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Aiden-Dong</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@aihai</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@airborne12</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Alibaba-HZY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@amosbird</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@arthuryangcs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@awakeljw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@bingzxy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@BiteTheDDDDt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@blackstar-baba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@caiconghui</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@CalvinKirs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@cambyzju</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@caoliang-web</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ccoffline</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@chaplinthink</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@chovy-3012</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ChPi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@DarvenDuan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dataalive</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dataroaring</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dh-cloud</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dohongdayi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@dongweizhao</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@drgnchan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@e0c9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@EmmyMiao87</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@englefly</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@eyesmoons</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@freemandealer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Gabriel39</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@gaodayue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@GoGoWen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Gongruixiao</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@gwdgithubnom</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@HappenLee</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Henry2SS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@hf200012</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@htyoung</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@jacktengg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@jackwener</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@JNSimba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Keysluomo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@kezhenxu94</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@killxdcj</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@lihuigang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@littleeleventhwolf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@liutang123</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@liuzhuang2017</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@lonre</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@lovingfeel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luozenglin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@luzhijing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@MeiontheTop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@mh-boy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@morningman</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@mrhhsg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Myasuka</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@nimuyuhan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@obobj</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@pengxiangyu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@qidaye</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@qzsee</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@renzhimin7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Royce33</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SleepyBear96</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@smallhibiscus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@sodamnsure</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@spaces-X</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@sparklezzz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@stalary</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@steadyBoy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tarepanda1024</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@THUMarkLau</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tianhui5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tinkerrrr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ucasfl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Userwhite</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@vinson0526</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangbo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangshuo128</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wangyf0555</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@weajun</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@weizuo93</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@whutpencil</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@WindyGao</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@wunan1210</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xiaokang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xiaokangguo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xiedeyantu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xinghuayu007</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xingtanzjr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xinyiZzz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xtr1993</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xu20160924</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xuliuzhe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xuzifu666</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@xy720</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yangzhg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yiguolei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yinzhijian</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@yjant</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zbtzbtzbt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zenoyang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zh0122</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhangstar333</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhannngchen</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhengshengjun</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zhengshiJ</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ZhikaiZuo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@ztgoto</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@zuochunwei</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Luzhijing</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Doris 发版通告] Apache Doris(Incubating) 0.15.0 Release]]></title>
        <id>/release-note-0.15.0</id>
        <link href="https://doris.apache.org/zh-CN/blog/release-note-0.15.0"/>
        <updated>2021-11-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<!--]]></summary>
        <content type="html"><![CDATA[<h1>Apache Doris(Incubating) 0.15.0 Release</h1><p>亲爱的社区小伙伴们，历时数个月精心打磨，我们很高兴地宣布， Apache Doris(incubating) 于 2021 年 11 月 29 日迎来了 0.15.0 Release 版本的正式发布！有 99 位 Contributor 为 Apache Doris 提交了近 700 项优化和修复，在此我们也对所有贡献者表示最真诚的感激！</p><p>在 0.15.0 Release 版本中，我们增加了诸多新功能，对 Apache Doris 的查询性能、易用性、稳定性方面等进行了全面优化：新增资源划分和隔离功能，用户可以通过资源标签的方式将集群中的 BE 节点划分为资源组，实现对在线、离线业务的统一管理和资源隔离；增加了 Runtime Filter 及 Join Reorder 功能，对多表 Join 场景的查询效率进行了大幅提升，在 Star Schema Benchmark 测试数据集下有 2-10 倍的性能提升；新增导入方式 Binlog Load ，使 Doris 可以增量同步 MySQL 中对数据更新操作的 CDC ；支持 String 列类型，长度最大支持 2GB ；支持 List 分区功能，可以通过枚举值创建分区；支持 Unique Key 模型上的 Update 语句；Spark-Doris-Connector 支持数据写入 Doris ……还有更多重要特性，欢迎大家下载使用。</p><p>我们欢迎大家在使用过程中，有任何问题通过 GitHub Discussion 或者 Dev 邮件组与我们取得联系，也期待大家参与社区讨论和建设中 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="重要更新">重要更新<a class="hash-link" href="#重要更新" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="资源划分与隔离">资源划分与隔离<a class="hash-link" href="#资源划分与隔离" title="标题的直接链接">​</a></h3><p>用户可以通过资源标签的方式将一个 Doris 集群中的 BE 节点划分成多个资源组，从而可以进行在线、离线业务的统一管理和节点级别的资源隔离。
同时，还可以通过限制单个查询任务的 CPU、内存开销以及复杂度，来控制单个查询的资源开销，从而降低不同查询之间的资源抢占问题。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="性能优化">性能优化<a class="hash-link" href="#性能优化" title="标题的直接链接">​</a></h3><ul><li><p>Runtime Filter 功能通过使用 Join 算子中右表的 Join Key 列条件来过滤左表的数据，在大部分 Join 场景下可以显著提升查询效率。如在 Star Schema Benchmark ( TPCH 的精简测试集) 下可以获得 2-10 倍的性能提升。</p></li><li><p>Join Reorder 功能可以通过通过代价模型自动帮助调整 SQL 中 Join 的顺序，以帮助获得最优的 Join 效率。
可通过会话变量  <code>set enable_cost_based_join_reorder=true</code>  开启。</p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="新增功能">新增功能<a class="hash-link" href="#新增功能" title="标题的直接链接">​</a></h3><ul><li>支持直接对接 Canal Server 同步 MySQL binlog 数据。</li><li>支持 String 列类型，最大支持 2GB 。</li><li>支持 List 分区功能，可以针对枚举值创建分区。</li><li>支持事务性 Insert 语句功能。可以通过 begin ; insert ; insert; ,... ; commit ; 的方式批量导入数据。</li><li>支持在 Unique Key 模型上的 Update 语句功能。可以在 Unique Key 模型表上执行 Update Set where 语句。</li><li>支持 SQL 阻塞名单功能。可以通过正则、Hash 值匹配等方式阻止部分 SQL 的执行。</li><li>支持 LDAP 登陆验证。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="拓展功能">拓展功能<a class="hash-link" href="#拓展功能" title="标题的直接链接">​</a></h3><ul><li>支持 Flink-Doris-Connector 。</li><li>支持 DataX doriswriter 插件。</li><li>Spark-Doris-Connector 支持数据写入 Doris 。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="功能优化">功能优化<a class="hash-link" href="#功能优化" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="查询">查询<a class="hash-link" href="#查询" title="标题的直接链接">​</a></h3><ul><li>支持在 SQL 查询规划阶段，利用 BE 的函数计算能力计算所有常量表达式。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="导入">导入<a class="hash-link" href="#导入" title="标题的直接链接">​</a></h3><ul><li>支持导入文本格式文件时，指定多字节行列分隔符或不可见分隔符。</li><li>支持通过 Stream Load 导入压缩格式文件。</li><li>Stream Load支持导入多行格式的 Json 数据。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="导出">导出<a class="hash-link" href="#导出" title="标题的直接链接">​</a></h3><ul><li>支持 Export 导出功能指定 where 过滤条件。支持导出文件使用多字节行列分隔符。支持导出到本地文件。</li><li>Export 导出功能支持仅导出指定的列。</li><li>支持通过 outfile 语句导出结果集到本地磁盘，并支持导出后写入导出成功的标记文件。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="易用性">易用性<a class="hash-link" href="#易用性" title="标题的直接链接">​</a></h3><ul><li>动态分区功能支持创建、保留指定的历史分区、支持自动冷热数据迁移设置。</li><li>支持在命令行使用可视化的树形结构展示查询、导入的计划和 Profile。</li><li>支持记录并查看 Stream Load 操作日志。</li><li>通过 Routine Load 消费 Kafka 数据时，可以指定时间点进行消费。</li><li>支持通过 show create routine load 功能导出 Routine Load 的创建语句。</li><li>支持通过 pause/resume all routine load 命令一键启停所有 Routine Load Job。</li><li>支持通过 alter routine load 语句修改 Routine Load 的 Broker List 和 Topic。</li><li>支持 create table as select 功能。</li><li>支持通过 alter table 命令修改列注释和表注释。</li><li>show tablet status 增加表创建时间、数据更新时间。</li><li>支持通过 show data skew 命令查看表的数据量分布，以排查数据倾斜问题。</li><li>支持通过 show/clean trash 命令查看 BE 文件回收站的磁盘占用情况并主动清除。</li><li>支持通过 show view 语句展示一个表被哪些视图所引用。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="新增函数">新增函数<a class="hash-link" href="#新增函数" title="标题的直接链接">​</a></h3><ul><li><code>bitmap_min</code>, <code>bit_length</code></li><li><code>yearweek</code>, <code>week</code>, <code>makedate</code></li><li><code>percentile</code> 精确百分位函数</li><li><code>json_array</code>，<code>json_object</code>，<code>json_quote</code></li><li>支持为 <code>AES_ENCRYPT</code> 和 <code>AES_DECRYPT</code> 函数创建自定义公钥。</li><li>支持通过 <code>create alias function</code> 创建函数别名来组合多个函数。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他">其他<a class="hash-link" href="#其他" title="标题的直接链接">​</a></h3><ul><li>支持访问 SSL 连接协议的ES外表。</li><li>支持在动态分区属性中指定热点分区的数量，热点分区将存储在 SSD 磁盘中。</li><li>支持通过 Broker Load 导入 Json 格式数据。</li><li>支持直接通过 libhdfs3 库访问 HDFS 进行数据的导入导出，而不需要 Broker 进程。</li><li>select into outfile 功能支持导出 Parquet 文件格式，并支持并行导出。</li><li>ODBC 外表支持 SQLServer。 </li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="致谢">致谢<a class="hash-link" href="#致谢" title="标题的直接链接">​</a></h2><p>Apache Doris(incubating) 0.15.0 Release 版本的发布离不开所有社区用户的支持，在此向所有参与版本设计、开发、测试、讨论的社区贡献者们表示感谢，他们分别是：</p><ul><li><a href="https://github.com/924060929" target="_blank" rel="noopener noreferrer">@924060929</a></li><li><a href="https://github.com/acelyc111" target="_blank" rel="noopener noreferrer">@acelyc111</a></li><li><a href="https://github.com/Aimiyoo" target="_blank" rel="noopener noreferrer">@Aimiyoo</a></li><li><a href="https://github.com/amosbird" target="_blank" rel="noopener noreferrer">@amosbird</a></li><li><a href="https://github.com/arthur-zhang" target="_blank" rel="noopener noreferrer">@arthur-zhang</a></li><li><a href="https://github.com/azurenake" target="_blank" rel="noopener noreferrer">@azurenake</a></li><li><a href="https://github.com/BiteTheDDDDt" target="_blank" rel="noopener noreferrer">@BiteTheDDDDt</a></li><li><a href="https://github.com/caiconghui" target="_blank" rel="noopener noreferrer">@caiconghui</a></li><li><a href="https://github.com/caneGuy" target="_blank" rel="noopener noreferrer">@caneGuy</a></li><li><a href="https://github.com/caoliang-web" target="_blank" rel="noopener noreferrer">@caoliang-web</a></li><li><a href="https://github.com/ccoffline" target="_blank" rel="noopener noreferrer">@ccoffline</a></li><li><a href="https://github.com/chaplinthink" target="_blank" rel="noopener noreferrer">@chaplinthink</a></li><li><a href="https://github.com/chovy-3012" target="_blank" rel="noopener noreferrer">@chovy-3012</a></li><li><a href="https://github.com/ChPi" target="_blank" rel="noopener noreferrer">@ChPi</a></li><li><a href="https://github.com/copperybean" target="_blank" rel="noopener noreferrer">@copperybean</a></li><li><a href="https://github.com/crazyleeyang" target="_blank" rel="noopener noreferrer">@crazyleeyang</a></li><li><a href="https://github.com/dh-cloud" target="_blank" rel="noopener noreferrer">@dh-cloud</a></li><li><a href="https://github.com/DinoZhang" target="_blank" rel="noopener noreferrer">@DinoZhang</a></li><li><a href="https://github.com/dixingxing0" target="_blank" rel="noopener noreferrer">@dixingxing0</a></li><li><a href="https://github.com/dohongdayi" target="_blank" rel="noopener noreferrer">@dohongdayi</a></li><li><a href="https://github.com/e0c9" target="_blank" rel="noopener noreferrer">@e0c9</a></li><li><a href="https://github.com/EmmyMiao87" target="_blank" rel="noopener noreferrer">@EmmyMiao87</a></li><li><a href="https://github.com/eyesmoons" target="_blank" rel="noopener noreferrer">@eyesmoons</a></li><li><a href="https://github.com/francisoliverlee" target="_blank" rel="noopener noreferrer">@francisoliverlee</a></li><li><a href="https://github.com/Gabriel39" target="_blank" rel="noopener noreferrer">@Gabriel39</a></li><li><a href="https://github.com/gaodayue" target="_blank" rel="noopener noreferrer">@gaodayue</a></li><li><a href="https://github.com/GoGoWen" target="_blank" rel="noopener noreferrer">@GoGoWen</a></li><li><a href="https://github.com/HappenLee" target="_blank" rel="noopener noreferrer">@HappenLee</a></li><li><a href="https://github.com/harveyyue" target="_blank" rel="noopener noreferrer">@harveyyue</a></li><li><a href="https://github.com/Henry2SS" target="_blank" rel="noopener noreferrer">@Henry2SS</a></li><li><a href="https://github.com/hf200012" target="_blank" rel="noopener noreferrer">@hf200012</a></li><li><a href="https://github.com/huangmengbin" target="_blank" rel="noopener noreferrer">@huangmengbin</a></li><li><a href="https://github.com/huozhanfeng" target="_blank" rel="noopener noreferrer">@huozhanfeng</a></li><li><a href="https://github.com/huzk8" target="_blank" rel="noopener noreferrer">@huzk8</a></li><li><a href="https://github.com/hxianshun" target="_blank" rel="noopener noreferrer">@hxianshun</a></li><li><a href="https://github.com/ikaruga4600" target="_blank" rel="noopener noreferrer">@ikaruga4600</a></li><li><a href="https://github.com/JameyWoo" target="_blank" rel="noopener noreferrer">@JameyWoo</a></li><li><a href="https://github.com/Jennifer88huang" target="_blank" rel="noopener noreferrer">@Jennifer88huang</a></li><li><a href="https://github.com/JinLiOnline" target="_blank" rel="noopener noreferrer">@JinLiOnline</a></li><li><a href="https://github.com/jinyuanlu" target="_blank" rel="noopener noreferrer">@jinyuanlu</a></li><li><a href="https://github.com/JNSimba" target="_blank" rel="noopener noreferrer">@JNSimba</a></li><li><a href="https://github.com/killxdcj" target="_blank" rel="noopener noreferrer">@killxdcj</a></li><li><a href="https://github.com/kuncle" target="_blank" rel="noopener noreferrer">@kuncle</a></li><li><a href="https://github.com/liutang123" target="_blank" rel="noopener noreferrer">@liutang123</a></li><li><a href="https://github.com/luozenglin" target="_blank" rel="noopener noreferrer">@luozenglin</a></li><li><a href="https://github.com/luzhijing" target="_blank" rel="noopener noreferrer">@luzhijing</a></li><li><a href="https://github.com/MarsXDM" target="_blank" rel="noopener noreferrer">@MarsXDM</a></li><li><a href="https://github.com/mh-boy" target="_blank" rel="noopener noreferrer">@mh-boy</a></li><li><a href="https://github.com/mk8310" target="_blank" rel="noopener noreferrer">@mk8310</a></li><li><a href="https://github.com/morningman" target="_blank" rel="noopener noreferrer">@morningman</a></li><li><a href="https://github.com/Myasuka" target="_blank" rel="noopener noreferrer">@Myasuka</a></li><li><a href="https://github.com/nimuyuhan" target="_blank" rel="noopener noreferrer">@nimuyuhan</a></li><li><a href="https://github.com/pan3793" target="_blank" rel="noopener noreferrer">@pan3793</a></li><li><a href="https://github.com/PatrickNicholas" target="_blank" rel="noopener noreferrer">@PatrickNicholas</a></li><li><a href="https://github.com/pengxiangyu" target="_blank" rel="noopener noreferrer">@pengxiangyu</a></li><li><a href="https://github.com/pierre94" target="_blank" rel="noopener noreferrer">@pierre94</a></li><li><a href="https://github.com/qidaye" target="_blank" rel="noopener noreferrer">@qidaye</a></li><li><a href="https://github.com/qzsee" target="_blank" rel="noopener noreferrer">@qzsee</a></li><li><a href="https://github.com/shiyi23" target="_blank" rel="noopener noreferrer">@shiyi23</a></li><li><a href="https://github.com/smallhibiscus" target="_blank" rel="noopener noreferrer">@smallhibiscus</a></li><li><a href="https://github.com/songenjie" target="_blank" rel="noopener noreferrer">@songenjie</a></li><li><a href="https://github.com/spaces-X" target="_blank" rel="noopener noreferrer">@spaces-X</a></li><li><a href="https://github.com/stalary" target="_blank" rel="noopener noreferrer">@stalary</a></li><li><a href="https://github.com/stdpain" target="_blank" rel="noopener noreferrer">@stdpain</a></li><li><a href="https://github.com/Stephen-Robin" target="_blank" rel="noopener noreferrer">@Stephen-Robin</a></li><li><a href="https://github.com/Sunt-ing" target="_blank" rel="noopener noreferrer">@Sunt-ing</a></li><li><a href="https://github.com/Taaang" target="_blank" rel="noopener noreferrer">@Taaang</a></li><li><a href="https://github.com/tarepanda1024" target="_blank" rel="noopener noreferrer">@tarepanda1024</a></li><li><a href="https://github.com/tianhui5" target="_blank" rel="noopener noreferrer">@tianhui5</a></li><li><a href="https://github.com/tinkerrrr" target="_blank" rel="noopener noreferrer">@tinkerrrr</a></li><li><a href="https://github.com/TobKed" target="_blank" rel="noopener noreferrer">@TobKed</a></li><li><a href="https://github.com/ucasfl" target="_blank" rel="noopener noreferrer">@ucasfl</a></li><li><a href="https://github.com/Userwhite" target="_blank" rel="noopener noreferrer">@Userwhite</a></li><li><a href="https://github.com/vinson0526" target="_blank" rel="noopener noreferrer">@vinson0526</a></li><li><a href="https://github.com/wangbo" target="_blank" rel="noopener noreferrer">@wangbo</a></li><li><a href="https://github.com/wangliansong" target="_blank" rel="noopener noreferrer">@wangliansong</a></li><li><a href="https://github.com/wangshuo128" target="_blank" rel="noopener noreferrer">@wangshuo128</a></li><li><a href="https://github.com/weajun" target="_blank" rel="noopener noreferrer">@weajun</a></li><li><a href="https://github.com/weihongkai2008" target="_blank" rel="noopener noreferrer">@weihongkai2008</a></li><li><a href="https://github.com/weizuo93" target="_blank" rel="noopener noreferrer">@weizuo93</a></li><li><a href="https://github.com/WindyGao" target="_blank" rel="noopener noreferrer">@WindyGao</a></li><li><a href="https://github.com/wunan1210" target="_blank" rel="noopener noreferrer">@wunan1210</a></li><li><a href="https://github.com/wuyunfeng" target="_blank" rel="noopener noreferrer">@wuyunfeng</a></li><li><a href="https://github.com/xhmz" target="_blank" rel="noopener noreferrer">@xhmz</a></li><li><a href="https://github.com/xiaokangguo" target="_blank" rel="noopener noreferrer">@xiaokangguo</a></li><li><a href="https://github.com/xiaoxiaopan118" target="_blank" rel="noopener noreferrer">@xiaoxiaopan118</a></li><li><a href="https://github.com/xinghuayu007" target="_blank" rel="noopener noreferrer">@xinghuayu007</a></li><li><a href="https://github.com/xinyiZzz" target="_blank" rel="noopener noreferrer">@xinyiZzz</a></li><li><a href="https://github.com/xuliuzhe" target="_blank" rel="noopener noreferrer">@xuliuzhe</a></li><li><a href="https://github.com/xxiao2018" target="_blank" rel="noopener noreferrer">@xxiao2018</a></li><li><a href="https://github.com/xy720" target="_blank" rel="noopener noreferrer">@xy720</a></li><li><a href="https://github.com/yangzhg" target="_blank" rel="noopener noreferrer">@yangzhg</a></li><li><a href="https://github.com/yx91490" target="_blank" rel="noopener noreferrer">@yx91490</a></li><li><a href="https://github.com/zbtzbtzbt" target="_blank" rel="noopener noreferrer">@zbtzbtzbt</a></li><li><a href="https://github.com/zenoyang" target="_blank" rel="noopener noreferrer">@zenoyang</a></li><li><a href="https://github.com/zh0122" target="_blank" rel="noopener noreferrer">@zh0122</a></li><li><a href="https://github.com/zhangboya1" target="_blank" rel="noopener noreferrer">@zhangboya1</a></li><li><a href="https://github.com/zhangstar333" target="_blank" rel="noopener noreferrer">@zhangstar333</a></li><li><a href="https://github.com/zuochunwei" target="_blank" rel="noopener noreferrer">@zuochunwei</a></li></ul>]]></content>
        <author>
            <name>Luzhijing</name>
        </author>
        <category label="版本发布" term="版本发布"/>
    </entry>
</feed>