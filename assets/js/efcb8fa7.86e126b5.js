"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[85969],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),k=r,c=m["".concat(s,".").concat(k)]||m[k]||u[k]||l;return n?a.createElement(c,i(i({ref:t},d),{},{components:n})):a.createElement(c,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},80539:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={title:"Flink Doris Connector",language:"en"},i=void 0,o={unversionedId:"extending-doris/flink-doris-connector",id:"version-1.0/extending-doris/flink-doris-connector",title:"Flink Doris Connector",description:"\x3c!--",source:"@site/versioned_docs/version-1.0/extending-doris/flink-doris-connector.md",sourceDirName:"extending-doris",slug:"/extending-doris/flink-doris-connector",permalink:"/docs/1.0/extending-doris/flink-doris-connector",draft:!1,tags:[],version:"1.0",frontMatter:{title:"Flink Doris Connector",language:"en"},sidebar:"docs",previous:{title:"Spark Doris Connector",permalink:"/docs/1.0/extending-doris/spark-doris-connector"},next:{title:"DataX doriswriter",permalink:"/docs/1.0/extending-doris/datax"}},s={},p=[{value:"Version Compatibility",id:"version-compatibility",level:2},{value:"Build and Install",id:"build-and-install",level:2},{value:"Using Maven",id:"using-maven",level:2},{value:"How to use",id:"how-to-use",level:2},{value:"Parameters Configuration",id:"parameters-configuration",level:3},{value:"SQL",id:"sql",level:3},{value:"DataStream",id:"datastream",level:3},{value:"DataSet",id:"dataset",level:3},{value:"General",id:"general",level:3},{value:"Doris &amp; Flink Column Type Mapping",id:"doris--flink-column-type-mapping",level:2},{value:"An example of using Flink CDC to access Doris (supports insert/update/delete events)",id:"an-example-of-using-flink-cdc-to-access-doris-supports-insertupdatedelete-events",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"flink-doris-connector"},"Flink Doris Connector"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The Flink Doris Connector can support operations (read, insert, modify, delete) data stored in Doris through Flink.")),(0,r.kt)("p",null,"Github: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-doris-flink-connector"},"https://github.com/apache/incubator-doris-flink-connector")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Doris")," table can be mapped to ",(0,r.kt)("inlineCode",{parentName:"li"},"DataStream")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"Table"),".")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")),(0,r.kt)("ol",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ol"},"Modification and deletion are only supported on the Unique Key model"),(0,r.kt)("li",{parentName:"ol"},"The current deletion is to support Flink CDC to access data to achieve automatic deletion. If it is to delete other data access methods, you need to implement it yourself. For the data deletion usage of Flink CDC, please refer to the last section of this document"))),(0,r.kt)("h2",{id:"version-compatibility"},"Version Compatibility"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Connector"),(0,r.kt)("th",{parentName:"tr",align:null},"Flink"),(0,r.kt)("th",{parentName:"tr",align:null},"Doris"),(0,r.kt)("th",{parentName:"tr",align:null},"Java"),(0,r.kt)("th",{parentName:"tr",align:null},"Scala"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1.11.6-2.12-xx"),(0,r.kt)("td",{parentName:"tr",align:null},"1.11.x"),(0,r.kt)("td",{parentName:"tr",align:null},"0.13+"),(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"2.12")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1.12.7-2.12-xx"),(0,r.kt)("td",{parentName:"tr",align:null},"1.12.x"),(0,r.kt)("td",{parentName:"tr",align:null},"0.13.+"),(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"2.12")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1.13.5-2.12-xx"),(0,r.kt)("td",{parentName:"tr",align:null},"1.13.x"),(0,r.kt)("td",{parentName:"tr",align:null},"0.13.+"),(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"2.12")))),(0,r.kt)("h2",{id:"build-and-install"},"Build and Install"),(0,r.kt)("p",null,"Execute following command in source dir:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sh build.sh --flink 1.11.6 --scala 2.12 # flink 1.11.6 scala 2.12\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: If you check out the source code from tag, you can just run ",(0,r.kt)("inlineCode",{parentName:"p"},"sh build.sh --tag")," without specifying the flink and scala versions. This is because the version in the tag source code is fixed. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"1.13.5-2.12-1.0.1")," means flink version 1.13.5, scala version 2.12, and connector version 1.0.1.")),(0,r.kt)("p",null,"After successful compilation, the file ",(0,r.kt)("inlineCode",{parentName:"p"},"doris-flink-1.13.5-2.12-1.0.1-SNAPSHOT.jar")," will be generated in the ",(0,r.kt)("inlineCode",{parentName:"p"},"output/")," directory. Copy this file to ",(0,r.kt)("inlineCode",{parentName:"p"},"ClassPath")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"Flink")," to use ",(0,r.kt)("inlineCode",{parentName:"p"},"Flink-Doris-Connector"),". For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"Flink")," running in ",(0,r.kt)("inlineCode",{parentName:"p"},"Local")," mode, put this file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"jars/")," folder. ",(0,r.kt)("inlineCode",{parentName:"p"},"Flink")," running in ",(0,r.kt)("inlineCode",{parentName:"p"},"Yarn")," cluster mode, put this file in the pre-deployment package."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Remarks:")," "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Doris FE should be configured to enable http v2 in the configuration"),(0,r.kt)("li",{parentName:"ol"},"Scala version currently only supports 2.12.x version")),(0,r.kt)("p",null,"conf/fe.conf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"enable_http_server_v2 = true\n")),(0,r.kt)("h2",{id:"using-maven"},"Using Maven"),(0,r.kt)("p",null,"Add Dependency"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<dependency>\n  <groupId>org.apache.doris</groupId>\n  <artifactId>doris-flink-connector</artifactId>\n  <version>1.11.6-2.12-SNAPSHOT</version>\n</dependency>\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Remarks")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"1.11.6 ")," can be substitute with ",(0,r.kt)("inlineCode",{parentName:"p"},"1.12.7")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"1.13.5")," base on flink version you are using "),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("p",null,"There are three ways to use Flink Doris Connector. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"SQL"),(0,r.kt)("li",{parentName:"ul"},"DataStream"),(0,r.kt)("li",{parentName:"ul"},"DataSet")),(0,r.kt)("h3",{id:"parameters-configuration"},"Parameters Configuration"),(0,r.kt)("p",null,"Flink Doris Connector Sink writes data to Doris by the ",(0,r.kt)("inlineCode",{parentName:"p"},"Stream load"),", and also supports the configurations of ",(0,r.kt)("inlineCode",{parentName:"p"},"Stream load")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"SQL  configured by ",(0,r.kt)("inlineCode",{parentName:"li"},"sink.properties.")," in the ",(0,r.kt)("inlineCode",{parentName:"li"},"WITH")),(0,r.kt)("li",{parentName:"ul"},"DataStream configured by ",(0,r.kt)("inlineCode",{parentName:"li"},"DorisExecutionOptions.builder().setStreamLoadProp(Properties)"))),(0,r.kt)("h3",{id:"sql"},"SQL"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE flink_doris_source (\n    name STRING,\n    age INT,\n    price DECIMAL(5,2),\n    sale DOUBLE\n    ) \n    WITH (\n      'connector' = 'doris',\n      'fenodes' = '$YOUR_DORIS_FE_HOSTNAME:$YOUR_DORIS_FE_RESFUL_PORT',\n      'table.identifier' = '$YOUR_DORIS_DATABASE_NAME.$YOUR_DORIS_TABLE_NAME',\n      'username' = '$YOUR_DORIS_USERNAME',\n      'password' = '$YOUR_DORIS_PASSWORD'\n);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sink")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE flink_doris_sink (\n    name STRING,\n    age INT,\n    price DECIMAL(5,2),\n    sale DOUBLE\n    ) \n    WITH (\n      'connector' = 'doris',\n      'fenodes' = '$YOUR_DORIS_FE_HOSTNAME:$YOUR_DORIS_FE_RESFUL_PORT',\n      'table.identifier' = '$YOUR_DORIS_DATABASE_NAME.$YOUR_DORIS_TABLE_NAME',\n      'username' = '$YOUR_DORIS_USERNAME',\n      'password' = '$YOUR_DORIS_PASSWORD'\n);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Insert")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO flink_doris_sink select name,age,price,sale from flink_doris_source\n")),(0,r.kt)("h3",{id:"datastream"},"DataStream"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},' Properties properties = new Properties();\n properties.put("fenodes","FE_IP:8030");\n properties.put("username","root");\n properties.put("password","");\n properties.put("table.identifier","db.table");\n env.addSource(new DorisSourceFunction(\n                        new DorisStreamOptions(properties), \n                        new SimpleListDeserializationSchema()\n                )\n        ).print(); \n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sink")),(0,r.kt)("p",null,"Json Stream"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Properties pro = new Properties();\npro.setProperty("format", "json");\npro.setProperty("strip_outer_array", "true");\nenv.fromElements(\n    "{\\"longitude\\": \\"116.405419\\", \\"city\\": \\"\u5317\u4eac\\", \\"latitude\\": \\"39.916927\\"}"\n    )\n     .addSink(\n        DorisSink.sink(\n            DorisReadOptions.builder().build(),\n            DorisExecutionOptions.builder()\n                    .setBatchSize(3)\n                    .setBatchIntervalMs(0l)\n                    .setMaxRetries(3)\n                    .setStreamLoadProp(pro).build(),\n            DorisOptions.builder()\n                    .setFenodes("FE_IP:8030")\n                    .setTableIdentifier("db.table")\n                    .setUsername("root")\n                    .setPassword("").build()\n        ));\n')),(0,r.kt)("p",null,"Json Stream"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'env.fromElements(\n    "{\\"longitude\\": \\"116.405419\\", \\"city\\": \\"\u5317\u4eac\\", \\"latitude\\": \\"39.916927\\"}"\n    )\n    .addSink(\n        DorisSink.sink(\n            DorisOptions.builder()\n                    .setFenodes("FE_IP:8030")\n                    .setTableIdentifier("db.table")\n                    .setUsername("root")\n                    .setPassword("").build()\n        ));\n')),(0,r.kt)("p",null,"RowData Stream"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'DataStream<RowData> source = env.fromElements("")\n    .map(new MapFunction<String, RowData>() {\n        @Override\n        public RowData map(String value) throws Exception {\n            GenericRowData genericRowData = new GenericRowData(3);\n            genericRowData.setField(0, StringData.fromString("\u5317\u4eac"));\n            genericRowData.setField(1, 116.405419);\n            genericRowData.setField(2, 39.916927);\n            return genericRowData;\n        }\n    });\n\nString[] fields = {"city", "longitude", "latitude"};\nLogicalType[] types = {new VarCharType(), new DoubleType(), new DoubleType()};\n\nsource.addSink(\n    DorisSink.sink(\n        fields,\n        types,\n        DorisReadOptions.builder().build(),\n        DorisExecutionOptions.builder()\n            .setBatchSize(3)\n            .setBatchIntervalMs(0L)\n            .setMaxRetries(3)\n            .build(),\n        DorisOptions.builder()\n            .setFenodes("FE_IP:8030")\n            .setTableIdentifier("db.table")\n            .setUsername("root")\n            .setPassword("").build()\n    ));\n')),(0,r.kt)("h3",{id:"dataset"},"DataSet"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sink")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'MapOperator<String, RowData> data = env.fromElements("")\n    .map(new MapFunction<String, RowData>() {\n        @Override\n        public RowData map(String value) throws Exception {\n            GenericRowData genericRowData = new GenericRowData(3);\n            genericRowData.setField(0, StringData.fromString("\u5317\u4eac"));\n            genericRowData.setField(1, 116.405419);\n            genericRowData.setField(2, 39.916927);\n            return genericRowData;\n        }\n    });\n\nDorisOptions dorisOptions = DorisOptions.builder()\n    .setFenodes("FE_IP:8030")\n    .setTableIdentifier("db.table")\n    .setUsername("root")\n    .setPassword("").build();\nDorisReadOptions readOptions = DorisReadOptions.defaults();\nDorisExecutionOptions executionOptions = DorisExecutionOptions.defaults();\n\nLogicalType[] types = {new VarCharType(), new DoubleType(), new DoubleType()};\nString[] fields = {"city", "longitude", "latitude"};\n\nDorisDynamicOutputFormat outputFormat = new DorisDynamicOutputFormat(\n    dorisOptions, readOptions, executionOptions, types, fields\n    );\n\noutputFormat.open(0, 1);\ndata.output(outputFormat);\noutputFormat.close();\n')),(0,r.kt)("h3",{id:"general"},"General"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fenodes"),(0,r.kt)("td",{parentName:"tr",align:null},"--"),(0,r.kt)("td",{parentName:"tr",align:null},"Doris FE http address, support multiple addresses, separated by commas")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"table.identifier"),(0,r.kt)("td",{parentName:"tr",align:null},"--"),(0,r.kt)("td",{parentName:"tr",align:null},"Doris table identifier, eg, db1.tbl1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"username"),(0,r.kt)("td",{parentName:"tr",align:null},"--"),(0,r.kt)("td",{parentName:"tr",align:null},"Doris username")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"password"),(0,r.kt)("td",{parentName:"tr",align:null},"--"),(0,r.kt)("td",{parentName:"tr",align:null},"Doris password")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"doris.request.retries"),(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of retries to send requests to Doris")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"doris.request.connect.timeout.ms"),(0,r.kt)("td",{parentName:"tr",align:null},"30000"),(0,r.kt)("td",{parentName:"tr",align:null},"Connection timeout for sending requests to Doris")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"doris.request.read.timeout.ms"),(0,r.kt)("td",{parentName:"tr",align:null},"30000"),(0,r.kt)("td",{parentName:"tr",align:null},"Read timeout for sending request to Doris")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"doris.request.query.timeout.s"),(0,r.kt)("td",{parentName:"tr",align:null},"3600"),(0,r.kt)("td",{parentName:"tr",align:null},"Query the timeout time of doris, the default is 1 hour, -1 means no timeout limit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"doris.request.tablet.size"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer.MAX_VALUE"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of Doris Tablets corresponding to an Partition. The smaller this value is set, the more partitions will be generated. This will increase the parallelism on the flink side, but at the same time will cause greater pressure on Doris.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"doris.batch.size"),(0,r.kt)("td",{parentName:"tr",align:null},"1024"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum number of rows to read data from BE at one time. Increasing this value can reduce the number of connections between Flink and Doris. Thereby reducing the extra time overhead caused by network delay.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"doris.exec.mem.limit"),(0,r.kt)("td",{parentName:"tr",align:null},"2147483648"),(0,r.kt)("td",{parentName:"tr",align:null},"Memory limit for a single query. The default is 2GB, in bytes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"doris.deserialize.arrow.async"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to support asynchronous conversion of Arrow format to RowBatch required for flink-doris-connector iteration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"doris.deserialize.queue.size"),(0,r.kt)("td",{parentName:"tr",align:null},"64"),(0,r.kt)("td",{parentName:"tr",align:null},"Asynchronous conversion of the internal processing queue in Arrow format takes effect when doris.deserialize.arrow.async is true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"doris.read.field"),(0,r.kt)("td",{parentName:"tr",align:null},"--"),(0,r.kt)("td",{parentName:"tr",align:null},"List of column names in the Doris table, separated by commas")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"doris.filter.query"),(0,r.kt)("td",{parentName:"tr",align:null},"--"),(0,r.kt)("td",{parentName:"tr",align:null},"Filter expression of the query, which is transparently transmitted to Doris. Doris uses this expression to complete source-side data filtering.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sink.batch.size"),(0,r.kt)("td",{parentName:"tr",align:null},"10000"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of lines in a single write BE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sink.max-retries"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of retries after writing BE failed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sink.batch.interval"),(0,r.kt)("td",{parentName:"tr",align:null},"10s"),(0,r.kt)("td",{parentName:"tr",align:null},"The flush interval, after which the asynchronous thread will write the data in the cache to BE. The default value is 10 second, and the time units are ms, s, min, h, and d. Set to 0 to turn off periodic writing.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sink.properties.*"),(0,r.kt)("td",{parentName:"tr",align:null},"--"),(0,r.kt)("td",{parentName:"tr",align:null},"The stream load parameters.",(0,r.kt)("br",null)," ",(0,r.kt)("br",null)," eg:",(0,r.kt)("br",null)," sink.properties.column_separator' = ','",(0,r.kt)("br",null)," ",(0,r.kt)("br",null),"  Setting 'sink.properties.escape_delimiters' = 'true' if you want to use a control char as a separator, so that such as '","\\","x01' will translate to binary 0x01",(0,r.kt)("br",null),(0,r.kt)("br",null),"  Support JSON format import, you need to enable both 'sink.properties.format' ='json' and 'sink.properties.strip_outer_array' ='true'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sink.enable-delete"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to enable deletion. This option requires Doris table to enable batch delete function (0.15+ version is enabled by default), and only supports Uniq model.")))),(0,r.kt)("h2",{id:"doris--flink-column-type-mapping"},"Doris & Flink Column Type Mapping"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Doris Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Flink Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NULL_TYPE"),(0,r.kt)("td",{parentName:"tr",align:null},"NULL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BOOLEAN"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOLEAN")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TINYINT"),(0,r.kt)("td",{parentName:"tr",align:null},"TINYINT")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.kt)("td",{parentName:"tr",align:null},"SMALLINT")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"INT"),(0,r.kt)("td",{parentName:"tr",align:null},"INT")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.kt)("td",{parentName:"tr",align:null},"BIGINT")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.kt)("td",{parentName:"tr",align:null},"FLOAT")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.kt)("td",{parentName:"tr",align:null},"DOUBLE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DATE"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.kt)("td",{parentName:"tr",align:null},"DECIMAL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CHAR"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LARGEINT"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VARCHAR"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DECIMALV2"),(0,r.kt)("td",{parentName:"tr",align:null},"DECIMAL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TIME"),(0,r.kt)("td",{parentName:"tr",align:null},"DOUBLE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"HLL"),(0,r.kt)("td",{parentName:"tr",align:null},"Unsupported datatype")))),(0,r.kt)("h2",{id:"an-example-of-using-flink-cdc-to-access-doris-supports-insertupdatedelete-events"},"An example of using Flink CDC to access Doris (supports insert/update/delete events)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE cdc_mysql_source (\n  id int\n  ,name VARCHAR\n  ,PRIMARY KEY (id) NOT ENFORCED\n) WITH (\n 'connector' = 'mysql-cdc',\n 'hostname' = '127.0.0.1',\n 'port' = '3306',\n 'username' = 'root',\n 'password' = 'password',\n 'database-name' = 'database',\n 'table-name' = 'table'\n);\n\n-- Support delete event synchronization (sink.enable-delete='true'), requires Doris table to enable batch delete function\nCREATE TABLE doris_sink (\nid INT,\nname STRING\n) \nWITH (\n  'connector' = 'doris',\n  'fenodes' = '127.0.0.1:8030',\n  'table.identifier' = 'database.table',\n  'username' = 'root',\n  'password' = '',\n  'sink.properties.format' = 'json',\n  'sink.properties.strip_outer_array' = 'true',\n  'sink.enable-delete' = 'true'\n);\n\ninsert into doris_sink select id,name from cdc_mysql_source;\n")))}u.isMDXComponent=!0}}]);