"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[50269],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),b=a,f=d["".concat(i,".").concat(b)]||d[b]||u[b]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},87182:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"SHOW TABLE CREATION",language:"en"},s=void 0,l={unversionedId:"sql-reference/sql-statements/Data-Manipulation/SHOW-TABLE-CREATION",id:"version-1.0/sql-reference/sql-statements/Data-Manipulation/SHOW-TABLE-CREATION",title:"SHOW TABLE CREATION",description:"\x3c!--",source:"@site/versioned_docs/version-1.0/sql-reference/sql-statements/Data-Manipulation/SHOW-TABLE-CREATION.md",sourceDirName:"sql-reference/sql-statements/Data-Manipulation",slug:"/sql-reference/sql-statements/Data-Manipulation/SHOW-TABLE-CREATION",permalink:"/docs/1.0/sql-reference/sql-statements/Data-Manipulation/SHOW-TABLE-CREATION",draft:!1,tags:[],version:"1.0",frontMatter:{title:"SHOW TABLE CREATION",language:"en"},sidebar:"docs",previous:{title:"SHOW TABLES",permalink:"/docs/1.0/sql-reference/sql-statements/Data-Manipulation/SHOW-TABLES"},next:{title:"SHOW TABLET",permalink:"/docs/1.0/sql-reference/sql-statements/Data-Manipulation/SHOW-TABLET"}},i={},c=[{value:"Description",id:"description",level:2},{value:"example",id:"example",level:2},{value:"keyword",id:"keyword",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"show-table-creation"},"SHOW TABLE CREATION"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"This statement is used to show the execution of the specified Iceberg Database table creation task\nSyntax.\n    SHOW TABLE CREATION [FROM db_name] [LIKE table_name_wild];\n    \nDescription.\n    1. Usage Notes\n        1) If db_name is not specified, the current default db is used.\n        2) If you use LIKE, it will match the table creation task with table_name_wild in the table name\n    2. The meaning of each column\n        1) Database: the name of the database\n        2) Table: the name of the table to be created\n        3) Status: the creation status of the table, `success`/`fail`.\n        4) CreateTime: the time to perform the task of creating the table\n        5) Error Msg: Error message of the failed table creation, or empty if it succeeds.\n")),(0,a.kt)("h2",{id:"example"},"example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'1. Show all the table creation tasks in the default Iceberg db\n    SHOW TABLE CREATION;\n\n    mysql> show table creation;\n    +----------------------------+--------+---------+---------------------+----------------------------------------------------------+\n    | Database                   | Table  | Status  | Create Time         | Error Msg                                                |\n    +----------------------------+--------+---------+---------------------+----------------------------------------------------------+\n    | default_cluster:iceberg_db | logs_1 | success | 2022-01-24 19:42:45 |                                                          |\n    | default_cluster:iceberg_db | logs   | fail    | 2022-01-24 19:42:45 | Cannot convert Iceberg type[list<string>] to Doris type. |\n    +----------------------------+--------+---------+---------------------+----------------------------------------------------------+\n\n2. Show the table creation tasks in the specified Iceberg db\n    SHOW TABLE CREATION FROM example_db;\n\n    mysql> show table creation from iceberg_db;\n    +----------------------------+--------+---------+---------------------+----------------------------------------------------------+\n    | Database                   | Table  | Status  | Create Time         | Error Msg                                                |\n    +----------------------------+--------+---------+---------------------+----------------------------------------------------------+\n    | default_cluster:iceberg_db | logs_1 | success | 2022-01-24 19:42:45 |                                                          |\n    | default_cluster:iceberg_db | logs   | fail    | 2022-01-24 19:42:45 | Cannot convert Iceberg type[list<string>] to Doris type. |\n    +----------------------------+--------+---------+---------------------+----------------------------------------------------------+\n    \n3. Show table creation tasks for the specified Iceberg db with the string "log" in the table name\n    SHOW TABLE CREATION FROM example_db LIKE \'%log%\';\n    \n    mysql> show table creation from iceberg_db like "%1";\n    +----------------------------+--------+---------+---------------------+-----------+\n    | Database                   | Table  | Status  | Create Time         | Error Msg |\n    +----------------------------+--------+---------+---------------------+-----------+\n    | default_cluster:iceberg_db | logs_1 | success | 2022-01-24 19:42:45 |           |\n    +----------------------------+--------+---------+---------------------+-----------+\n')),(0,a.kt)("h2",{id:"keyword"},"keyword"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"SHOW,TABLE CREATION\n")))}u.isMDXComponent=!0}}]);