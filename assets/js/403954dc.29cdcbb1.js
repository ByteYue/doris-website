"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[44072],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),s=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,p=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),k=s(n),m=a,c=k["".concat(p,".").concat(m)]||k[m]||d[m]||l;return n?r.createElement(c,i(i({ref:e},u),{},{components:n})):r.createElement(c,i({ref:e},u))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:a,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},5884:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const l={title:"Seatunnel Connector Flink Doris",language:"en"},i=void 0,o={unversionedId:"extending-doris/seatunnel/flink-sink",id:"version-1.0/extending-doris/seatunnel/flink-sink",title:"Seatunnel Connector Flink Doris",description:"\x3c!--",source:"@site/versioned_docs/version-1.0/extending-doris/seatunnel/flink-sink.md",sourceDirName:"extending-doris/seatunnel",slug:"/extending-doris/seatunnel/flink-sink",permalink:"/docs/1.0/extending-doris/seatunnel/flink-sink",draft:!1,tags:[],version:"1.0",frontMatter:{title:"Seatunnel Connector Flink Doris",language:"en"},sidebar:"docs",previous:{title:"Seatunnel Connector Spark Doris",permalink:"/docs/1.0/extending-doris/seatunnel/spark-sink"},next:{title:"Contribute UDF",permalink:"/docs/1.0/extending-doris/udf/contribute-udf"}},p={},s=[{value:"Flink Sink Doris(2.x)",id:"flink-sink-doris2x",level:2},{value:"Options",id:"options",level:3},{value:"Examples",id:"examples",level:3},{value:"Start command",id:"start-command",level:3}],u={toc:s};function d(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"seatunnel"},"Seatunnel"),(0,a.kt)("p",null,"The newest ",(0,a.kt)("a",{parentName:"p",href:"https://seatunnel.apache.org"},"Apache SeaTunnel (formerly waterdrop )")," already supports Doris's connector, SeaTunnel can use Spark engine and Flink engine to synchronize data to Doris."),(0,a.kt)("h2",{id:"flink-sink-doris2x"},"Flink Sink Doris(2.x)"),(0,a.kt)("p",null,"Seatunnel Flink Sink Doris ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-seatunnel/tree/dev/seatunnel-connectors/seatunnel-connector-flink-doris"},"plugin code")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"name"),(0,a.kt)("th",{parentName:"tr",align:null},"type"),(0,a.kt)("th",{parentName:"tr",align:null},"required"),(0,a.kt)("th",{parentName:"tr",align:null},"default value"),(0,a.kt)("th",{parentName:"tr",align:null},"engine"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"fenodes"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"yes"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"Flink")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"database"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"yes"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"Flink")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"table"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"yes"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"Flink")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"user"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"yes"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"Flink")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"password"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"yes"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"Flink")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"batch_size"),(0,a.kt)("td",{parentName:"tr",align:null},"int"),(0,a.kt)("td",{parentName:"tr",align:null},"no"),(0,a.kt)("td",{parentName:"tr",align:null},"100"),(0,a.kt)("td",{parentName:"tr",align:null},"Flink")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"interval"),(0,a.kt)("td",{parentName:"tr",align:null},"int"),(0,a.kt)("td",{parentName:"tr",align:null},"no"),(0,a.kt)("td",{parentName:"tr",align:null},"1000"),(0,a.kt)("td",{parentName:"tr",align:null},"Flink")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"max_retries"),(0,a.kt)("td",{parentName:"tr",align:null},"int"),(0,a.kt)("td",{parentName:"tr",align:null},"no"),(0,a.kt)("td",{parentName:"tr",align:null},"1"),(0,a.kt)("td",{parentName:"tr",align:null},"Flink")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"doris.*"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"no"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"Flink")))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"fenodes [string]")),(0,a.kt)("p",null,"Doris Fe http url, eg: 127.0.0.1:8030"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"database [string]")),(0,a.kt)("p",null,"Doris database"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"table [string]")),(0,a.kt)("p",null,"Doris table"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"user [string]")),(0,a.kt)("p",null,"Doris user"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"password [string]")),(0,a.kt)("p",null,"Doris password"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"batch_size [int]")),(0,a.kt)("p",null,"The maximum number of lines to write to Doris at a time, the default value is 100"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"interval [int]")),(0,a.kt)("p",null,"The flush interval (in milliseconds), after which the asynchronous thread writes the data in the cache to Doris. Set to 0 to turn off periodic writes."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"max_retries [int]")),(0,a.kt)("p",null,"Number of retries after writing to Doris fails"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"doris.* [string]")),(0,a.kt)("p",null,"Import parameters for Stream load. For example: 'doris.column_separator' = ', ' etc."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://doris.apache.org/administrator-guide/load-data/stream-load-manual.html"},"More Stream Load parameter configuration")),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Socket To Doris"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'env {\n  execution.parallelism = 1\n}\nsource {\n    SocketStream {\n      host = 127.0.0.1\n      port = 9999\n      result_table_name = "socket"\n      field_name = "info"\n    }\n}\ntransform {\n}\nsink {\n  DorisSink {\n      fenodes = "127.0.0.1:8030"\n      user = root\n      password = 123456\n      database = test\n      table = test_tbl\n      batch_size = 5\n      max_retries = 1\n      interval = 5000\n    }\n}\n\n')),(0,a.kt)("h3",{id:"start-command"},"Start command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sh bin/start-seatunnel-flink.sh --config config/flink.streaming.conf\n")))}d.isMDXComponent=!0}}]);