"use strict";(self.webpackChunkselectdb_portal=self.webpackChunkselectdb_portal||[]).push([[9140],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=r.createContext({}),l=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,o=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(t),f=s,m=d["".concat(i,".").concat(f)]||d[f]||p[f]||o;return t?r.createElement(m,a(a({ref:n},u),{},{components:t})):r.createElement(m,a({ref:n},u))}));function f(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var o=t.length,a=new Array(o);a[0]=d;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:s,a[1]=c;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},16864:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=t(87462),s=(t(67294),t(3905));const o={title:"concat_ws",language:"en"},a=void 0,c={unversionedId:"sql-manual/sql-functions/string-functions/concat_ws",id:"version-dev/sql-manual/sql-functions/string-functions/concat_ws",title:"concat_ws",description:"\x3c!--",source:"@site/versioned_docs/version-dev/sql-manual/sql-functions/string-functions/concat_ws.md",sourceDirName:"sql-manual/sql-functions/string-functions",slug:"/sql-manual/sql-functions/string-functions/concat_ws",permalink:"/docs/dev/sql-manual/sql-functions/string-functions/concat_ws",draft:!1,tags:[],version:"dev",frontMatter:{title:"concat_ws",language:"en"},sidebar:"docs",previous:{title:"ST_LineFromText,ST_LineStringFromText",permalink:"/docs/dev/sql-manual/sql-functions/spatial-functions/st_linefromtext"},next:{title:"hex",permalink:"/docs/dev/sql-manual/sql-functions/string-functions/hex"}},i={},l=[{value:"concat_ws",id:"concat_ws",level:2},{value:"Description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}],u={toc:l};function p(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"concat_ws"},"concat_ws"),(0,s.kt)("h3",{id:"description"},"Description"),(0,s.kt)("h4",{id:"syntax"},"Syntax"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"VARCHAR concat_ws (VARCHAR sep, VARCHAR str,...)"),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"VARCHAR concat_ws(VARCHAR sep, ARRAY array)")),(0,s.kt)("p",null,"Using the first parameter SEP as a connector, the second parameter and all subsequent parameters(or all string in an ARRAY) are spliced into a string.\nIf the separator is NULL, return NULL.\nThe ",(0,s.kt)("inlineCode",{parentName:"p"},"concat_ws")," function does not skip empty strings, it skips NULL values."),(0,s.kt)("h3",{id:"example"},"example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'mysql> select concat_ws("or", "d", "is");\n+----------------------------+\n| concat_ws(\'or\', \'d\', \'is\') |\n+----------------------------+\n| doris                      |\n+----------------------------+\n\nmysql> select concat_ws(NULL, "d", "is");\n+----------------------------+\n| concat_ws(NULL, \'d\', \'is\') |\n+----------------------------+\n| NULL                       |\n+----------------------------+\n\nmysql> select concat_ws("or", "d", NULL,"is");\n+---------------------------------+\n| concat_ws("or", "d", NULL,"is") |\n+---------------------------------+\n| doris                           |\n+---------------------------------+\n\nmysql> select concat_ws("or", ["d", "is"]);\n+-----------------------------------+\n| concat_ws(\'or\', ARRAY(\'d\', \'is\')) |\n+-----------------------------------+\n| doris                             |\n+-----------------------------------+\n\nmysql> select concat_ws(NULL, ["d", "is"]);\n+-----------------------------------+\n| concat_ws(NULL, ARRAY(\'d\', \'is\')) |\n+-----------------------------------+\n| NULL                              |\n+-----------------------------------+\n\nmysql> select concat_ws("or", ["d", NULL,"is"]);\n+-----------------------------------------+\n| concat_ws(\'or\', ARRAY(\'d\', NULL, \'is\')) |\n+-----------------------------------------+\n| doris                                   |\n+-----------------------------------------+\n')),(0,s.kt)("h3",{id:"keywords"},"keywords"),(0,s.kt)("p",null,"CONCAT_WS,CONCAT,WS,ARRAY"))}p.isMDXComponent=!0}}]);