(window.webpackJsonp=window.webpackJsonp||[]).push([[3514],{4144:function(s,t,a){"use strict";a.r(t);var e=a(15),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"rollup-与查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rollup-与查询"}},[s._v("#")]),s._v(" Rollup 与查询")]),s._v(" "),a("p",[s._v("ROLLUP 在多维分析中是“上卷”的意思，即将数据按某种指定的粒度进行进一步聚合。")]),s._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[s._v("#")]),s._v(" 基本概念")]),s._v(" "),a("p",[s._v("在 Doris 中，我们将用户通过建表语句创建出来的表称为 Base 表（Base Table）。Base 表中保存着按用户建表语句指定的方式存储的基础数据。")]),s._v(" "),a("p",[s._v("在 Base 表之上，我们可以创建任意多个 ROLLUP 表。这些 ROLLUP 的数据是基于 Base 表产生的，并且在物理上是"),a("strong",[s._v("独立存储")]),s._v("的。")]),s._v(" "),a("p",[s._v("ROLLUP 表的基本作用，在于在 Base 表的基础上，获得更粗粒度的聚合数据。")]),s._v(" "),a("p",[s._v("下面我们用示例详细说明在不同数据模型中的 ROLLUP 表及其作用。")]),s._v(" "),a("h3",{attrs:{id:"aggregate-和-unique-模型中的-rollup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aggregate-和-unique-模型中的-rollup"}},[s._v("#")]),s._v(" Aggregate 和 Unique 模型中的 ROLLUP")]),s._v(" "),a("p",[s._v("因为 Unique 只是 Aggregate 模型的一个特例，所以这里我们不加以区别。")]),s._v(" "),a("ol",[a("li",[s._v("示例1：获得每个用户的总消费")])]),s._v(" "),a("p",[s._v("接 "),a("strong",[a("RouterLink",{attrs:{to:"/zh-CN/1.1/data-table/data-model.html#Aggregate模型"}},[s._v("数据模型Aggregate 模型")]),a("strong",[s._v("小节的")]),s._v("示例2")],1),s._v("，Base 表结构如下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("ColumnName")]),s._v(" "),a("th",[s._v("Type")]),s._v(" "),a("th",[s._v("AggregationType")]),s._v(" "),a("th",[s._v("Comment")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("user_id")]),s._v(" "),a("td",[s._v("LARGEINT")]),s._v(" "),a("td"),s._v(" "),a("td",[s._v("用户id")])]),s._v(" "),a("tr",[a("td",[s._v("date")]),s._v(" "),a("td",[s._v("DATE")]),s._v(" "),a("td"),s._v(" "),a("td",[s._v("数据灌入日期")])]),s._v(" "),a("tr",[a("td",[s._v("timestamp")]),s._v(" "),a("td",[s._v("DATETIME")]),s._v(" "),a("td"),s._v(" "),a("td",[s._v("数据灌入时间，精确到秒")])]),s._v(" "),a("tr",[a("td",[s._v("city")]),s._v(" "),a("td",[s._v("VARCHAR(20)")]),s._v(" "),a("td"),s._v(" "),a("td",[s._v("用户所在城市")])]),s._v(" "),a("tr",[a("td",[s._v("age")]),s._v(" "),a("td",[s._v("SMALLINT")]),s._v(" "),a("td"),s._v(" "),a("td",[s._v("用户年龄")])]),s._v(" "),a("tr",[a("td",[s._v("sex")]),s._v(" "),a("td",[s._v("TINYINT")]),s._v(" "),a("td"),s._v(" "),a("td",[s._v("用户性别")])]),s._v(" "),a("tr",[a("td",[s._v("last_visit_date")]),s._v(" "),a("td",[s._v("DATETIME")]),s._v(" "),a("td",[s._v("REPLACE")]),s._v(" "),a("td",[s._v("用户最后一次访问时间")])]),s._v(" "),a("tr",[a("td",[s._v("cost")]),s._v(" "),a("td",[s._v("BIGINT")]),s._v(" "),a("td",[s._v("SUM")]),s._v(" "),a("td",[s._v("用户总消费")])]),s._v(" "),a("tr",[a("td",[s._v("max_dwell_time")]),s._v(" "),a("td",[s._v("INT")]),s._v(" "),a("td",[s._v("MAX")]),s._v(" "),a("td",[s._v("用户最大停留时间")])]),s._v(" "),a("tr",[a("td",[s._v("min_dwell_time")]),s._v(" "),a("td",[s._v("INT")]),s._v(" "),a("td",[s._v("MIN")]),s._v(" "),a("td",[s._v("用户最小停留时间")])])])]),s._v(" "),a("p",[s._v("存储的数据如下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("user_id")]),s._v(" "),a("th",[s._v("date")]),s._v(" "),a("th",[s._v("timestamp")]),s._v(" "),a("th",[s._v("city")]),s._v(" "),a("th",[s._v("age")]),s._v(" "),a("th",[s._v("sex")]),s._v(" "),a("th",[s._v("last_visit_date")]),s._v(" "),a("th",[s._v("cost")]),s._v(" "),a("th",[s._v("max_dwell_time")]),s._v(" "),a("th",[s._v("min_dwell_time")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("10000")]),s._v(" "),a("td",[s._v("2017-10-01")]),s._v(" "),a("td",[s._v("2017-10-01 08:00:05")]),s._v(" "),a("td",[s._v("北京")]),s._v(" "),a("td",[s._v("20")]),s._v(" "),a("td",[s._v("0")]),s._v(" "),a("td",[s._v("2017-10-01 06:00:00")]),s._v(" "),a("td",[s._v("20")]),s._v(" "),a("td",[s._v("10")]),s._v(" "),a("td",[s._v("10")])]),s._v(" "),a("tr",[a("td",[s._v("10000")]),s._v(" "),a("td",[s._v("2017-10-01")]),s._v(" "),a("td",[s._v("2017-10-01 09:00:05")]),s._v(" "),a("td",[s._v("北京")]),s._v(" "),a("td",[s._v("20")]),s._v(" "),a("td",[s._v("0")]),s._v(" "),a("td",[s._v("2017-10-01 07:00:00")]),s._v(" "),a("td",[s._v("15")]),s._v(" "),a("td",[s._v("2")]),s._v(" "),a("td",[s._v("2")])]),s._v(" "),a("tr",[a("td",[s._v("10001")]),s._v(" "),a("td",[s._v("2017-10-01")]),s._v(" "),a("td",[s._v("2017-10-01 18:12:10")]),s._v(" "),a("td",[s._v("北京")]),s._v(" "),a("td",[s._v("30")]),s._v(" "),a("td",[s._v("1")]),s._v(" "),a("td",[s._v("2017-10-01 17:05:45")]),s._v(" "),a("td",[s._v("2")]),s._v(" "),a("td",[s._v("22")]),s._v(" "),a("td",[s._v("22")])]),s._v(" "),a("tr",[a("td",[s._v("10002")]),s._v(" "),a("td",[s._v("2017-10-02")]),s._v(" "),a("td",[s._v("2017-10-02 13:10:00")]),s._v(" "),a("td",[s._v("上海")]),s._v(" "),a("td",[s._v("20")]),s._v(" "),a("td",[s._v("1")]),s._v(" "),a("td",[s._v("2017-10-02 12:59:12")]),s._v(" "),a("td",[s._v("200")]),s._v(" "),a("td",[s._v("5")]),s._v(" "),a("td",[s._v("5")])]),s._v(" "),a("tr",[a("td",[s._v("10003")]),s._v(" "),a("td",[s._v("2017-10-02")]),s._v(" "),a("td",[s._v("2017-10-02 13:15:00")]),s._v(" "),a("td",[s._v("广州")]),s._v(" "),a("td",[s._v("32")]),s._v(" "),a("td",[s._v("0")]),s._v(" "),a("td",[s._v("2017-10-02 11:20:00")]),s._v(" "),a("td",[s._v("30")]),s._v(" "),a("td",[s._v("11")]),s._v(" "),a("td",[s._v("11")])]),s._v(" "),a("tr",[a("td",[s._v("10004")]),s._v(" "),a("td",[s._v("2017-10-01")]),s._v(" "),a("td",[s._v("2017-10-01 12:12:48")]),s._v(" "),a("td",[s._v("深圳")]),s._v(" "),a("td",[s._v("35")]),s._v(" "),a("td",[s._v("0")]),s._v(" "),a("td",[s._v("2017-10-01 10:00:15")]),s._v(" "),a("td",[s._v("100")]),s._v(" "),a("td",[s._v("3")]),s._v(" "),a("td",[s._v("3")])]),s._v(" "),a("tr",[a("td",[s._v("10004")]),s._v(" "),a("td",[s._v("2017-10-03")]),s._v(" "),a("td",[s._v("2017-10-03 12:38:20")]),s._v(" "),a("td",[s._v("深圳")]),s._v(" "),a("td",[s._v("35")]),s._v(" "),a("td",[s._v("0")]),s._v(" "),a("td",[s._v("2017-10-03 10:20:22")]),s._v(" "),a("td",[s._v("11")]),s._v(" "),a("td",[s._v("6")]),s._v(" "),a("td",[s._v("6")])])])]),s._v(" "),a("p",[s._v("在此基础上，我们创建一个 ROLLUP：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("ColumnName")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("user_id")])]),s._v(" "),a("tr",[a("td",[s._v("cost")])])])]),s._v(" "),a("p",[s._v("该 ROLLUP 只包含两列：user_id 和 cost。则创建完成后，该 ROLLUP 中存储的数据如下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("user_id")]),s._v(" "),a("th",[s._v("cost")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("10000")]),s._v(" "),a("td",[s._v("35")])]),s._v(" "),a("tr",[a("td",[s._v("10001")]),s._v(" "),a("td",[s._v("2")])]),s._v(" "),a("tr",[a("td",[s._v("10002")]),s._v(" "),a("td",[s._v("200")])]),s._v(" "),a("tr",[a("td",[s._v("10003")]),s._v(" "),a("td",[s._v("30")])]),s._v(" "),a("tr",[a("td",[s._v("10004")]),s._v(" "),a("td",[s._v("111")])])])]),s._v(" "),a("p",[s._v("可以看到，ROLLUP 中仅保留了每个 user_id，在 cost 列上的 SUM 的结果。那么当我们进行如下查询时:")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" user_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" user_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Doris 会自动命中这个 ROLLUP 表，从而只需扫描极少的数据量，即可完成这次聚合查询。")]),s._v(" "),a("ol",[a("li",[s._v("示例2：获得不同城市，不同年龄段用户的总消费、最长和最短页面驻留时间")])]),s._v(" "),a("p",[s._v("紧接示例1。我们在 Base 表基础之上，再创建一个 ROLLUP：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("ColumnName")]),s._v(" "),a("th",[s._v("Type")]),s._v(" "),a("th",[s._v("AggregationType")]),s._v(" "),a("th",[s._v("Comment")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("city")]),s._v(" "),a("td",[s._v("VARCHAR(20)")]),s._v(" "),a("td"),s._v(" "),a("td",[s._v("用户所在城市")])]),s._v(" "),a("tr",[a("td",[s._v("age")]),s._v(" "),a("td",[s._v("SMALLINT")]),s._v(" "),a("td"),s._v(" "),a("td",[s._v("用户年龄")])]),s._v(" "),a("tr",[a("td",[s._v("cost")]),s._v(" "),a("td",[s._v("BIGINT")]),s._v(" "),a("td",[s._v("SUM")]),s._v(" "),a("td",[s._v("用户总消费")])]),s._v(" "),a("tr",[a("td",[s._v("max_dwell_time")]),s._v(" "),a("td",[s._v("INT")]),s._v(" "),a("td",[s._v("MAX")]),s._v(" "),a("td",[s._v("用户最大停留时间")])]),s._v(" "),a("tr",[a("td",[s._v("min_dwell_time")]),s._v(" "),a("td",[s._v("INT")]),s._v(" "),a("td",[s._v("MIN")]),s._v(" "),a("td",[s._v("用户最小停留时间")])])])]),s._v(" "),a("p",[s._v("则创建完成后，该 ROLLUP 中存储的数据如下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("city")]),s._v(" "),a("th",[s._v("age")]),s._v(" "),a("th",[s._v("cost")]),s._v(" "),a("th",[s._v("max_dwell_time")]),s._v(" "),a("th",[s._v("min_dwell_time")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("北京")]),s._v(" "),a("td",[s._v("20")]),s._v(" "),a("td",[s._v("35")]),s._v(" "),a("td",[s._v("10")]),s._v(" "),a("td",[s._v("2")])]),s._v(" "),a("tr",[a("td",[s._v("北京")]),s._v(" "),a("td",[s._v("30")]),s._v(" "),a("td",[s._v("2")]),s._v(" "),a("td",[s._v("22")]),s._v(" "),a("td",[s._v("22")])]),s._v(" "),a("tr",[a("td",[s._v("上海")]),s._v(" "),a("td",[s._v("20")]),s._v(" "),a("td",[s._v("200")]),s._v(" "),a("td",[s._v("5")]),s._v(" "),a("td",[s._v("5")])]),s._v(" "),a("tr",[a("td",[s._v("广州")]),s._v(" "),a("td",[s._v("32")]),s._v(" "),a("td",[s._v("30")]),s._v(" "),a("td",[s._v("11")]),s._v(" "),a("td",[s._v("11")])]),s._v(" "),a("tr",[a("td",[s._v("深圳")]),s._v(" "),a("td",[s._v("35")]),s._v(" "),a("td",[s._v("111")]),s._v(" "),a("td",[s._v("6")]),s._v(" "),a("td",[s._v("3")])])])]),s._v(" "),a("p",[s._v("当我们进行如下这些查询时:")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max_dwell_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("min_dwell_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max_dwell_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("min_dwell_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("min_dwell_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("Doris 会执行这些sql时会自动命中这个 ROLLUP 表。")]),s._v(" "),a("h3",{attrs:{id:"duplicate-模型中的-rollup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#duplicate-模型中的-rollup"}},[s._v("#")]),s._v(" Duplicate 模型中的 ROLLUP")]),s._v(" "),a("p",[s._v("因为 Duplicate 模型没有聚合的语意。所以该模型中的 ROLLUP，已经失去了“上卷”这一层含义。而仅仅是作为调整列顺序，以命中前缀索引的作用。我们将在"),a("RouterLink",{attrs:{to:"/zh-CN/1.1/data-table/index/prefix-index.html"}},[s._v("前缀索引")]),s._v("详细介绍前缀索引，以及如何使用ROLLUP改变前缀索引，以获得更好的查询效率。")],1),s._v(" "),a("h2",{attrs:{id:"rollup-调整前缀索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rollup-调整前缀索引"}},[s._v("#")]),s._v(" ROLLUP 调整前缀索引")]),s._v(" "),a("p",[s._v("因为建表时已经指定了列顺序，所以一个表只有一种前缀索引。这对于使用其他不能命中前缀索引的列作为条件进行的查询来说，效率上可能无法满足需求。因此，我们可以通过创建 ROLLUP 来人为的调整列顺序。举例说明：")]),s._v(" "),a("p",[s._v("Base 表结构如下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("ColumnName")]),s._v(" "),a("th",[s._v("Type")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("user_id")]),s._v(" "),a("td",[s._v("BIGINT")])]),s._v(" "),a("tr",[a("td",[s._v("age")]),s._v(" "),a("td",[s._v("INT")])]),s._v(" "),a("tr",[a("td",[s._v("message")]),s._v(" "),a("td",[s._v("VARCHAR(100)")])]),s._v(" "),a("tr",[a("td",[s._v("max_dwell_time")]),s._v(" "),a("td",[s._v("DATETIME")])]),s._v(" "),a("tr",[a("td",[s._v("min_dwell_time")]),s._v(" "),a("td",[s._v("DATETIME")])])])]),s._v(" "),a("p",[s._v("我们可以在此基础上创建一个 ROLLUP 表：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("ColumnName")]),s._v(" "),a("th",[s._v("Type")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("age")]),s._v(" "),a("td",[s._v("INT")])]),s._v(" "),a("tr",[a("td",[s._v("user_id")]),s._v(" "),a("td",[s._v("BIGINT")])]),s._v(" "),a("tr",[a("td",[s._v("message")]),s._v(" "),a("td",[s._v("VARCHAR(100)")])]),s._v(" "),a("tr",[a("td",[s._v("max_dwell_time")]),s._v(" "),a("td",[s._v("DATETIME")])]),s._v(" "),a("tr",[a("td",[s._v("min_dwell_time")]),s._v(" "),a("td",[s._v("DATETIME")])])])]),s._v(" "),a("p",[s._v("可以看到，ROLLUP 和 Base 表的列完全一样，只是将 user_id 和 age 的顺序调换了。那么当我们进行如下查询时：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%error%"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("会优先选择 ROLLUP 表，因为 ROLLUP 的前缀索引匹配度更高。")]),s._v(" "),a("h2",{attrs:{id:"rollup使用说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rollup使用说明"}},[s._v("#")]),s._v(" ROLLUP使用说明")]),s._v(" "),a("ul",[a("li",[s._v("ROLLUP 最根本的作用是提高某些查询的查询效率（无论是通过聚合来减少数据量，还是修改列顺序以匹配前缀索引）。因此 ROLLUP 的含义已经超出了 “上卷” 的范围。这也是为什么我们在源代码中，将其命名为 Materialized Index（物化索引）的原因。")]),s._v(" "),a("li",[s._v("ROLLUP 是附属于 Base 表的，可以看做是 Base 表的一种辅助数据结构。用户可以在 Base 表的基础上，创建或删除 ROLLUP，但是不能在查询中显式的指定查询某 ROLLUP。是否命中 ROLLUP 完全由 Doris 系统自动决定。")]),s._v(" "),a("li",[s._v("ROLLUP 的数据是独立物理存储的。因此，创建的 ROLLUP 越多，占用的磁盘空间也就越大。同时对导入速度也会有影响（导入的ETL阶段会自动产生所有 ROLLUP 的数据），但是不会降低查询效率（只会更好）。")]),s._v(" "),a("li",[s._v("ROLLUP 的数据更新与 Base 表是完全同步的。用户无需关心这个问题。")]),s._v(" "),a("li",[s._v("ROLLUP 中列的聚合方式，与 Base 表完全相同。在创建 ROLLUP 无需指定，也不能修改。")]),s._v(" "),a("li",[s._v("查询能否命中 ROLLUP 的一个必要条件（非充分条件）是，查询所涉及的"),a("strong",[s._v("所有列")]),s._v("（包括 select list 和 where 中的查询条件列等）都存在于该 ROLLUP 的列中。否则，查询只能命中 Base 表。")]),s._v(" "),a("li",[s._v("某些类型的查询（如 count(*)）在任何条件下，都无法命中 ROLLUP。具体参见接下来的 "),a("strong",[s._v("聚合模型的局限性")]),s._v(" 一节。")]),s._v(" "),a("li",[s._v("可以通过 "),a("code",[s._v("EXPLAIN your_sql;")]),s._v(" 命令获得查询执行计划，在执行计划中，查看是否命中 ROLLUP。")]),s._v(" "),a("li",[s._v("可以通过 "),a("code",[s._v("DESC tbl_name ALL;")]),s._v(" 语句显示 Base 表和所有已创建完成的 ROLLUP。")])]),s._v(" "),a("h2",{attrs:{id:"查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[s._v("#")]),s._v(" 查询")]),s._v(" "),a("p",[s._v("在 Doris 里 Rollup 作为一份聚合物化视图，其在查询中可以起到两个作用：")]),s._v(" "),a("ul",[a("li",[s._v("索引")]),s._v(" "),a("li",[s._v("聚合数据（仅用于聚合模型，即aggregate key）")])]),s._v(" "),a("p",[s._v("但是为了命中 Rollup 需要满足一定的条件，并且可以通过执行计划中 ScanNode 节点的 PreAggregation 的值来判断是否可以命中 Rollup，以及 Rollup 字段来判断命中的是哪一张 Rollup 表。")]),s._v(" "),a("h3",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[s._v("#")]),s._v(" 索引")]),s._v(" "),a("p",[s._v("前面的"),a("RouterLink",{attrs:{to:"/zh-CN/1.1/data-table/index/prefix-index.html"}},[s._v("前缀索引")]),s._v("中已经介绍过 Doris 的前缀索引，即 Doris 会把 Base/Rollup 表中的前 36 个字节（有 varchar 类型则可能导致前缀索引不满 36 个字节，varchar 会截断前缀索引，并且最多使用 varchar 的 20 个字节）在底层存储引擎单独生成一份排序的稀疏索引数据(数据也是排序的，用索引定位，然后在数据中做二分查找)，然后在查询的时候会根据查询中的条件来匹配每个 Base/Rollup 的前缀索引，并且选择出匹配前缀索引最长的一个 Base/Rollup。")],1),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("       -----\x3e 从左到右匹配\n+----+----+----+----+----+----+\n| c1 | c2 | c3 | c4 | c5 |... |\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如上图，取查询中 where 以及 on 上下推到 ScanNode 的条件，从前缀索引的第一列开始匹配，检查条件中是否有这些列，有则累计匹配的长度，直到匹配不上或者36字节结束（varchar类型的列只能匹配20个字节，并且会匹配不足36个字节截断前缀索引），然后选择出匹配长度最长的一个 Base/Rollup，下面举例说明，创建了一张Base表以及四张rollup：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("+---------------+-------+--------------+------+-------+---------+-------+\n| IndexName     | Field | Type         | Null | Key   | Default | Extra |\n+---------------+-------+--------------+------+-------+---------+-------+\n| test          | k1    | TINYINT      | Yes  | true  | N/A     |       |\n|               | k2    | SMALLINT     | Yes  | true  | N/A     |       |\n|               | k3    | INT          | Yes  | true  | N/A     |       |\n|               | k4    | BIGINT       | Yes  | true  | N/A     |       |\n|               | k5    | DECIMAL(9,3) | Yes  | true  | N/A     |       |\n|               | k6    | CHAR(5)      | Yes  | true  | N/A     |       |\n|               | k7    | DATE         | Yes  | true  | N/A     |       |\n|               | k8    | DATETIME     | Yes  | true  | N/A     |       |\n|               | k9    | VARCHAR(20)  | Yes  | true  | N/A     |       |\n|               | k10   | DOUBLE       | Yes  | false | N/A     | MAX   |\n|               | k11   | FLOAT        | Yes  | false | N/A     | SUM   |\n|               |       |              |      |       |         |       |\n| rollup_index1 | k9    | VARCHAR(20)  | Yes  | true  | N/A     |       |\n|               | k1    | TINYINT      | Yes  | true  | N/A     |       |\n|               | k2    | SMALLINT     | Yes  | true  | N/A     |       |\n|               | k3    | INT          | Yes  | true  | N/A     |       |\n|               | k4    | BIGINT       | Yes  | true  | N/A     |       |\n|               | k5    | DECIMAL(9,3) | Yes  | true  | N/A     |       |\n|               | k6    | CHAR(5)      | Yes  | true  | N/A     |       |\n|               | k7    | DATE         | Yes  | true  | N/A     |       |\n|               | k8    | DATETIME     | Yes  | true  | N/A     |       |\n|               | k10   | DOUBLE       | Yes  | false | N/A     | MAX   |\n|               | k11   | FLOAT        | Yes  | false | N/A     | SUM   |\n|               |       |              |      |       |         |       |\n| rollup_index2 | k9    | VARCHAR(20)  | Yes  | true  | N/A     |       |\n|               | k2    | SMALLINT     | Yes  | true  | N/A     |       |\n|               | k1    | TINYINT      | Yes  | true  | N/A     |       |\n|               | k3    | INT          | Yes  | true  | N/A     |       |\n|               | k4    | BIGINT       | Yes  | true  | N/A     |       |\n|               | k5    | DECIMAL(9,3) | Yes  | true  | N/A     |       |\n|               | k6    | CHAR(5)      | Yes  | true  | N/A     |       |\n|               | k7    | DATE         | Yes  | true  | N/A     |       |\n|               | k8    | DATETIME     | Yes  | true  | N/A     |       |\n|               | k10   | DOUBLE       | Yes  | false | N/A     | MAX   |\n|               | k11   | FLOAT        | Yes  | false | N/A     | SUM   |\n|               |       |              |      |       |         |       |\n| rollup_index3 | k4    | BIGINT       | Yes  | true  | N/A     |       |\n|               | k5    | DECIMAL(9,3) | Yes  | true  | N/A     |       |\n|               | k6    | CHAR(5)      | Yes  | true  | N/A     |       |\n|               | k1    | TINYINT      | Yes  | true  | N/A     |       |\n|               | k2    | SMALLINT     | Yes  | true  | N/A     |       |\n|               | k3    | INT          | Yes  | true  | N/A     |       |\n|               | k7    | DATE         | Yes  | true  | N/A     |       |\n|               | k8    | DATETIME     | Yes  | true  | N/A     |       |\n|               | k9    | VARCHAR(20)  | Yes  | true  | N/A     |       |\n|               | k10   | DOUBLE       | Yes  | false | N/A     | MAX   |\n|               | k11   | FLOAT        | Yes  | false | N/A     | SUM   |\n|               |       |              |      |       |         |       |\n| rollup_index4 | k4    | BIGINT       | Yes  | true  | N/A     |       |\n|               | k6    | CHAR(5)      | Yes  | true  | N/A     |       |\n|               | k5    | DECIMAL(9,3) | Yes  | true  | N/A     |       |\n|               | k1    | TINYINT      | Yes  | true  | N/A     |       |\n|               | k2    | SMALLINT     | Yes  | true  | N/A     |       |\n|               | k3    | INT          | Yes  | true  | N/A     |       |\n|               | k7    | DATE         | Yes  | true  | N/A     |       |\n|               | k8    | DATETIME     | Yes  | true  | N/A     |       |\n|               | k9    | VARCHAR(20)  | Yes  | true  | N/A     |       |\n|               | k10   | DOUBLE       | Yes  | false | N/A     | MAX   |\n|               | k11   | FLOAT        | Yes  | false | N/A     | SUM   |\n+---------------+-------+--------------+------+-------+---------+-------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br")])]),a("p",[s._v("这五张表的前缀索引分别为")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Base(k1 ,k2, k3, k4, k5, k6, k7)\n\nrollup_index1(k9)\n\nrollup_index2(k9)\n\nrollup_index3(k4, k5, k6, k1, k2, k3, k7)\n\nrollup_index4(k4, k6, k5, k1, k2, k3, k7)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("能用的上前缀索引的列上的条件需要是 "),a("code",[s._v("=")]),s._v(" "),a("code",[s._v("<")]),s._v(" "),a("code",[s._v(">")]),s._v(" "),a("code",[s._v("<=")]),s._v(" "),a("code",[s._v(">=")]),s._v(" "),a("code",[s._v("in")]),s._v(" "),a("code",[s._v("between")]),s._v(" 这些并且这些条件是并列的且关系使用 "),a("code",[s._v("and")]),s._v(" 连接，对于"),a("code",[s._v("or")]),s._v("、"),a("code",[s._v("!=")]),s._v(" 等这些不能命中，然后看以下查询：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" test "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" k1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" k2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("有 k1 以及 k2 上的条件，检查只有 Base 的第一列含有条件里的 k1，所以匹配最长的前缀索引即 test，explain一下：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("|   0:OlapScanNode                                                                                                                                                                                                                                                                                                                                                                                                 \n|      TABLE: test                                                                                                                                                                                                                                                                                                                                                                                                  \n|      PREAGGREGATION: OFF. Reason: No AggregateInfo                                                                                                                                                                                                                                                                                                                                                                \n|      PREDICATES: `k1` = 1, `k2` > 3                                                                                                                                                                                                                                                                                                                                                                               \n|      partitions=1/1                                                                                                                                                                                                                                                                                                                                                                                               \n|      rollup: test                                                                                                                                                                                                                                                                                                                                                                                                 \n|      buckets=1/10                                                                                                                                                                                                                                                                                                                                                                                                 \n|      cardinality=-1                                                                                                                                                                                                                                                                                                                                                                                               \n|      avgRowSize=0.0                                                                                                                                                                                                                                                                                                                                                                                               \n|      numNodes=0                                                                                                                                                                                                                                                                                                                                                                                                   \n|      tuple ids: 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("再看以下查询：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" test "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" k4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" k5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("有 k4 以及 k5 的条件，检查 rollup_index3、rollup_index4 的第一列含有 k4，但是 rollup_index3 的第二列含有k5，所以匹配的前缀索引最长。")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("|   0:OlapScanNode                                                                                                                                                                                                                                                                                                                                                                                                \n|      TABLE: test                                                                                                                                                                                                                                                                                                                                                                                                  \n|      PREAGGREGATION: OFF. Reason: No AggregateInfo                                                                                                                                                                                                                                                                                                                                                                \n|      PREDICATES: `k4` = 1, `k5` > 3                                                                                                                                                                                                                                                                                                                                                                              \n|      partitions=1/1                                                                                                                                                                                                                                                                                                                                                                                               \n|      rollup: rollup_index3                                                                                                                                                                                                                                                                                                                                                                                        \n|      buckets=10/10                                                                                                                                                                                                                                                                                                                                                                                                \n|      cardinality=-1                                                                                                                                                                                                                                                                                                                                                                                               \n|      avgRowSize=0.0                                                                                                                                                                                                                                                                                                                                                                                               \n|      numNodes=0                                                                                                                                                                                                                                                                                                                                                                                                   \n|      tuple ids: 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("现在我们尝试匹配含有 varchar 列上的条件，如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" test "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" k9 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yyyy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" k1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("有 k9 以及 k1 两个条件，rollup_index1 以及 rollup_index2 的第一列都含有 k9，按理说这里选择这两个 rollup 都可以命中前缀索引并且效果是一样的随机选择一个即可（因为这里 varchar 刚好20个字节，前缀索引不足36个字节被截断），但是当前策略这里还会继续匹配 k1，因为 rollup_index1 的第二列为 k1，所以选择了 rollup_index1，其实后面的 k1 条件并不会起到加速的作用。(如果对于前缀索引外的条件需要其可以起到加速查询的目的，可以通过建立 Bloom Filter 过滤器加速。一般对于字符串类型建立即可，因为 Doris 针对列存在 Block 级别对于整形、日期已经有 Min/Max 索引) 以下是 explain 的结果。")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("|   0:OlapScanNode                                                                                                                                                                                                                                                                                                                                                                                                  \n|      TABLE: test                                                                                                                                                                                                                                                                                                                                                                                                  \n|      PREAGGREGATION: OFF. Reason: No AggregateInfo                                                                                                                                                                                                                                                                                                                                                                \n|      PREDICATES: `k9` IN ('xxx', 'yyyy'), `k1` = 10                                                                                                                                                                                                                                                                                                                                                               \n|      partitions=1/1                                                                                                                                                                                                                                                                                                                                                                                               \n|      rollup: rollup_index1                                                                                                                                                                                                                                                                                                                                                                                        \n|      buckets=1/10                                                                                                                                                                                                                                                                                                                                                                                                 \n|      cardinality=-1                                                                                                                                                                                                                                                                                                                                                                                               \n|      avgRowSize=0.0                                                                                                                                                                                                                                                                                                                                                                                               \n|      numNodes=0                                                                                                                                                                                                                                                                                                                                                                                                   \n|      tuple ids: 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("最后看一个多张Rollup都可以命中的查询：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" test "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" k4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" k5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" k6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("有 k4,k5,k6 三个条件，rollup_index3 以及 rollup_index4 的前3列分别含有这三列，所以两者匹配的前缀索引长度一致，选取两者都可以，当前默认的策略为选取了比较早创建的一张 rollup，这里为 rollup_index3。")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("|   0:OlapScanNode                                                                                                                                                                                                                                                                                                                                                                                                  \n|      TABLE: test                                                                                                                                                                                                                                                                                                                                                                                                  \n|      PREAGGREGATION: OFF. Reason: No AggregateInfo                                                                                                                                                                                                                                                                                                                                                                \n|      PREDICATES: `k4` &lt; 1000, `k5` = 80, `k6` >= 10000.0                                                                                                                                                                                                                                                                                                                                                          \n|      partitions=1/1                                                                                                                                                                                                                                                                                                                                                                                               \n|      rollup: rollup_index3                                                                                                                                                                                                                                                                                                                                                                                        \n|      buckets=10/10                                                                                                                                                                                                                                                                                                                                                                                                \n|      cardinality=-1                                                                                                                                                                                                                                                                                                                                                                                               \n|      avgRowSize=0.0                                                                                                                                                                                                                                                                                                                                                                                               \n|      numNodes=0                                                                                                                                                                                                                                                                                                                                                                                                   \n|      tuple ids: 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("如果稍微修改上面的查询为：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT * FROM test WHERE k4 < 1000 AND k5 = 80 OR k6 >= 10000;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("则这里的查询不能命中前缀索引。（甚至 Doris 存储引擎内的任何 Min/Max,BloomFilter 索引都不能起作用)")]),s._v(" "),a("h3",{attrs:{id:"聚合数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合数据"}},[s._v("#")]),s._v(" 聚合数据")]),s._v(" "),a("p",[s._v("当然一般的聚合物化视图其聚合数据的功能是必不可少的，这类物化视图对于聚合类查询或报表类查询都有非常大的帮助，要命中聚合物化视图需要下面一些前提：")]),s._v(" "),a("ol",[a("li",[s._v("查询或者子查询中涉及的所有列都存在一张独立的 Rollup 中。")]),s._v(" "),a("li",[s._v("如果查询或者子查询中有 Join，则 Join 的类型需要是 Inner join。")])]),s._v(" "),a("p",[s._v("以下是可以命中Rollup的一些聚合查询的种类，")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("列类型 查询类型")]),s._v(" "),a("th",[s._v("Sum")]),s._v(" "),a("th",[s._v("Distinct/Count Distinct")]),s._v(" "),a("th",[s._v("Min")]),s._v(" "),a("th",[s._v("Max")]),s._v(" "),a("th",[s._v("APPROX_COUNT_DISTINCT")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("Key")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("true")]),s._v(" "),a("td",[s._v("true")]),s._v(" "),a("td",[s._v("true")]),s._v(" "),a("td",[s._v("true")])]),s._v(" "),a("tr",[a("td",[s._v("Value(Sum)")]),s._v(" "),a("td",[s._v("true")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")])]),s._v(" "),a("tr",[a("td",[s._v("Value(Replace)")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")])]),s._v(" "),a("tr",[a("td",[s._v("Value(Min)")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("true")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")])]),s._v(" "),a("tr",[a("td",[s._v("Value(Max)")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("true")]),s._v(" "),a("td",[s._v("false")])])])]),s._v(" "),a("p",[s._v("如果符合上述条件，则针对聚合模型在判断命中 Rollup 的时候会有两个阶段：")]),s._v(" "),a("ol",[a("li",[s._v("首先通过条件匹配出命中前缀索引索引最长的 Rollup 表，见上述索引策略。")]),s._v(" "),a("li",[s._v("然后比较 Rollup 的行数，选择最小的一张 Rollup。")])]),s._v(" "),a("p",[s._v("如下 Base 表以及 Rollup：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("+-------------+-------+--------------+------+-------+---------+-------+\n| IndexName   | Field | Type         | Null | Key   | Default | Extra |\n+-------------+-------+--------------+------+-------+---------+-------+\n| test_rollup | k1    | TINYINT      | Yes  | true  | N/A     |       |\n|             | k2    | SMALLINT     | Yes  | true  | N/A     |       |\n|             | k3    | INT          | Yes  | true  | N/A     |       |\n|             | k4    | BIGINT       | Yes  | true  | N/A     |       |\n|             | k5    | DECIMAL(9,3) | Yes  | true  | N/A     |       |\n|             | k6    | CHAR(5)      | Yes  | true  | N/A     |       |\n|             | k7    | DATE         | Yes  | true  | N/A     |       |\n|             | k8    | DATETIME     | Yes  | true  | N/A     |       |\n|             | k9    | VARCHAR(20)  | Yes  | true  | N/A     |       |\n|             | k10   | DOUBLE       | Yes  | false | N/A     | MAX   |\n|             | k11   | FLOAT        | Yes  | false | N/A     | SUM   |\n|             |       |              |      |       |         |       |\n| rollup2     | k1    | TINYINT      | Yes  | true  | N/A     |       |\n|             | k2    | SMALLINT     | Yes  | true  | N/A     |       |\n|             | k3    | INT          | Yes  | true  | N/A     |       |\n|             | k10   | DOUBLE       | Yes  | false | N/A     | MAX   |\n|             | k11   | FLOAT        | Yes  | false | N/A     | SUM   |\n|             |       |              |      |       |         |       |\n| rollup1     | k1    | TINYINT      | Yes  | true  | N/A     |       |\n|             | k2    | SMALLINT     | Yes  | true  | N/A     |       |\n|             | k3    | INT          | Yes  | true  | N/A     |       |\n|             | k4    | BIGINT       | Yes  | true  | N/A     |       |\n|             | k5    | DECIMAL(9,3) | Yes  | true  | N/A     |       |\n|             | k10   | DOUBLE       | Yes  | false | N/A     | MAX   |\n|             | k11   | FLOAT        | Yes  | false | N/A     | SUM   |\n+-------------+-------+--------------+------+-------+---------+-------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[s._v("看以下查询：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k11"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" test_rollup "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" k1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" k2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" k3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("首先判断查询是否可以命中聚合的 Rollup表，经过查上面的图是可以的，然后条件中含有 k1,k2,k3 三个条件，这三个条件 test_rollup、rollup1、rollup2 的前三列都含有，所以前缀索引长度一致，然后比较行数显然 rollup2 的聚合程度最高行数最少所以选取 rollup2。")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("|   0:OlapScanNode                                          |\n|      TABLE: test_rollup                                   |\n|      PREAGGREGATION: ON                                   |\n|      PREDICATES: `k1` = 10, `k2` > 200, `k3` IN (1, 2, 3) |\n|      partitions=1/1                                       |\n|      rollup: rollup2                                      |\n|      buckets=1/10                                         |\n|      cardinality=-1                                       |\n|      avgRowSize=0.0                                       |\n|      numNodes=0                                           |\n|      tuple ids: 0                                         |\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);